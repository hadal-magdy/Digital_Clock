

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 18:11:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 17/01/2025 GMT
    28                           ; 
    29                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000FE0                     bsr             equ	4064
    62   000FE9                     fsr0            equ	4073
    63   000FEA                     fsr0h           equ	4074
    64   000FE9                     fsr0l           equ	4073
    65   000FE1                     fsr1            equ	4065
    66   000FE2                     fsr1h           equ	4066
    67   000FE1                     fsr1l           equ	4065
    68   000FD9                     fsr2            equ	4057
    69   000FDA                     fsr2h           equ	4058
    70   000FD9                     fsr2l           equ	4057
    71   000FEF                     indf0           equ	4079
    72   000FE7                     indf1           equ	4071
    73   000FDF                     indf2           equ	4063
    74   000FF2                     intcon          equ	4082
    75   000000                     nvmcon          equ	0
    76   000FF9                     pcl             equ	4089
    77   000FFA                     pclath          equ	4090
    78   000FFB                     pclatu          equ	4091
    79   000FEB                     plusw0          equ	4075
    80   000FE3                     plusw1          equ	4067
    81   000FDB                     plusw2          equ	4059
    82   000FED                     postdec0        equ	4077
    83   000FE5                     postdec1        equ	4069
    84   000FDD                     postdec2        equ	4061
    85   000FEE                     postinc0        equ	4078
    86   000FE6                     postinc1        equ	4070
    87   000FDE                     postinc2        equ	4062
    88   000FEC                     preinc0         equ	4076
    89   000FE4                     preinc1         equ	4068
    90   000FDC                     preinc2         equ	4060
    91   000FF3                     prod            equ	4083
    92   000FF4                     prodh           equ	4084
    93   000FF3                     prodl           equ	4083
    94   000FD8                     status          equ	4056
    95   000FF5                     tablat          equ	4085
    96   000FF6                     tblptr          equ	4086
    97   000FF7                     tblptrh         equ	4087
    98   000FF6                     tblptrl         equ	4086
    99   000FF8                     tblptru         equ	4088
   100   000FFD                     tosl            equ	4093
   101   000FE8                     wreg            equ	4072
   102   000F80                     PORTA           equ	3968	;# 
   103   000F81                     PORTB           equ	3969	;# 
   104   000F82                     PORTC           equ	3970	;# 
   105   000F83                     PORTD           equ	3971	;# 
   106   000F84                     PORTE           equ	3972	;# 
   107   000F89                     LATA            equ	3977	;# 
   108   000F8A                     LATB            equ	3978	;# 
   109   000F8B                     LATC            equ	3979	;# 
   110   000F8C                     LATD            equ	3980	;# 
   111   000F8D                     LATE            equ	3981	;# 
   112   000F92                     TRISA           equ	3986	;# 
   113   000F92                     DDRA            equ	3986	;# 
   114   000F93                     TRISB           equ	3987	;# 
   115   000F93                     DDRB            equ	3987	;# 
   116   000F94                     TRISC           equ	3988	;# 
   117   000F94                     DDRC            equ	3988	;# 
   118   000F95                     TRISD           equ	3989	;# 
   119   000F95                     DDRD            equ	3989	;# 
   120   000F96                     TRISE           equ	3990	;# 
   121   000F96                     DDRE            equ	3990	;# 
   122   000F9B                     OSCTUNE         equ	3995	;# 
   123   000F9D                     PIE1            equ	3997	;# 
   124   000F9E                     PIR1            equ	3998	;# 
   125   000F9F                     IPR1            equ	3999	;# 
   126   000FA0                     PIE2            equ	4000	;# 
   127   000FA1                     PIR2            equ	4001	;# 
   128   000FA2                     IPR2            equ	4002	;# 
   129   000FA6                     EECON1          equ	4006	;# 
   130   000FA7                     EECON2          equ	4007	;# 
   131   000FA8                     EEDATA          equ	4008	;# 
   132   000FA9                     EEADR           equ	4009	;# 
   133   000FAA                     EEADRH          equ	4010	;# 
   134   000FAB                     RCSTA           equ	4011	;# 
   135   000FAB                     RCSTA1          equ	4011	;# 
   136   000FAC                     TXSTA           equ	4012	;# 
   137   000FAC                     TXSTA1          equ	4012	;# 
   138   000FAD                     TXREG           equ	4013	;# 
   139   000FAD                     TXREG1          equ	4013	;# 
   140   000FAE                     RCREG           equ	4014	;# 
   141   000FAE                     RCREG1          equ	4014	;# 
   142   000FAF                     SPBRG           equ	4015	;# 
   143   000FAF                     SPBRG1          equ	4015	;# 
   144   000FB0                     SPBRGH          equ	4016	;# 
   145   000FB1                     T3CON           equ	4017	;# 
   146   000FB2                     TMR3            equ	4018	;# 
   147   000FB2                     TMR3L           equ	4018	;# 
   148   000FB3                     TMR3H           equ	4019	;# 
   149   000FB4                     CMCON           equ	4020	;# 
   150   000FB5                     CVRCON          equ	4021	;# 
   151   000FB6                     ECCP1AS         equ	4022	;# 
   152   000FB7                     PWM1CON         equ	4023	;# 
   153   000FB8                     BAUDCON         equ	4024	;# 
   154   000FB8                     BAUDCTL         equ	4024	;# 
   155   000FBA                     CCP2CON         equ	4026	;# 
   156   000FBB                     CCPR2           equ	4027	;# 
   157   000FBB                     CCPR2L          equ	4027	;# 
   158   000FBC                     CCPR2H          equ	4028	;# 
   159   000FBD                     CCP1CON         equ	4029	;# 
   160   000FBE                     CCPR1           equ	4030	;# 
   161   000FBE                     CCPR1L          equ	4030	;# 
   162   000FBF                     CCPR1H          equ	4031	;# 
   163   000FC0                     ADCON2          equ	4032	;# 
   164   000FC1                     ADCON1          equ	4033	;# 
   165   000FC2                     ADCON0          equ	4034	;# 
   166   000FC3                     ADRES           equ	4035	;# 
   167   000FC3                     ADRESL          equ	4035	;# 
   168   000FC4                     ADRESH          equ	4036	;# 
   169   000FC5                     SSPCON2         equ	4037	;# 
   170   000FC6                     SSPCON1         equ	4038	;# 
   171   000FC7                     SSPSTAT         equ	4039	;# 
   172   000FC8                     SSPADD          equ	4040	;# 
   173   000FC9                     SSPBUF          equ	4041	;# 
   174   000FCA                     T2CON           equ	4042	;# 
   175   000FCB                     PR2             equ	4043	;# 
   176   000FCB                     MEMCON          equ	4043	;# 
   177   000FCC                     TMR2            equ	4044	;# 
   178   000FCD                     T1CON           equ	4045	;# 
   179   000FCE                     TMR1            equ	4046	;# 
   180   000FCE                     TMR1L           equ	4046	;# 
   181   000FCF                     TMR1H           equ	4047	;# 
   182   000FD0                     RCON            equ	4048	;# 
   183   000FD1                     WDTCON          equ	4049	;# 
   184   000FD2                     HLVDCON         equ	4050	;# 
   185   000FD2                     LVDCON          equ	4050	;# 
   186   000FD3                     OSCCON          equ	4051	;# 
   187   000FD5                     T0CON           equ	4053	;# 
   188   000FD6                     TMR0            equ	4054	;# 
   189   000FD6                     TMR0L           equ	4054	;# 
   190   000FD7                     TMR0H           equ	4055	;# 
   191   000FD8                     STATUS          equ	4056	;# 
   192   000FD9                     FSR2            equ	4057	;# 
   193   000FD9                     FSR2L           equ	4057	;# 
   194   000FDA                     FSR2H           equ	4058	;# 
   195   000FDB                     PLUSW2          equ	4059	;# 
   196   000FDC                     PREINC2         equ	4060	;# 
   197   000FDD                     POSTDEC2        equ	4061	;# 
   198   000FDE                     POSTINC2        equ	4062	;# 
   199   000FDF                     INDF2           equ	4063	;# 
   200   000FE0                     BSR             equ	4064	;# 
   201   000FE1                     FSR1            equ	4065	;# 
   202   000FE1                     FSR1L           equ	4065	;# 
   203   000FE2                     FSR1H           equ	4066	;# 
   204   000FE3                     PLUSW1          equ	4067	;# 
   205   000FE4                     PREINC1         equ	4068	;# 
   206   000FE5                     POSTDEC1        equ	4069	;# 
   207   000FE6                     POSTINC1        equ	4070	;# 
   208   000FE7                     INDF1           equ	4071	;# 
   209   000FE8                     WREG            equ	4072	;# 
   210   000FE9                     FSR0            equ	4073	;# 
   211   000FE9                     FSR0L           equ	4073	;# 
   212   000FEA                     FSR0H           equ	4074	;# 
   213   000FEB                     PLUSW0          equ	4075	;# 
   214   000FEC                     PREINC0         equ	4076	;# 
   215   000FED                     POSTDEC0        equ	4077	;# 
   216   000FEE                     POSTINC0        equ	4078	;# 
   217   000FEF                     INDF0           equ	4079	;# 
   218   000FF0                     INTCON3         equ	4080	;# 
   219   000FF1                     INTCON2         equ	4081	;# 
   220   000FF2                     INTCON          equ	4082	;# 
   221   000FF3                     PROD            equ	4083	;# 
   222   000FF3                     PRODL           equ	4083	;# 
   223   000FF4                     PRODH           equ	4084	;# 
   224   000FF5                     TABLAT          equ	4085	;# 
   225   000FF6                     TBLPTR          equ	4086	;# 
   226   000FF6                     TBLPTRL         equ	4086	;# 
   227   000FF7                     TBLPTRH         equ	4087	;# 
   228   000FF8                     TBLPTRU         equ	4088	;# 
   229   000FF9                     PCLAT           equ	4089	;# 
   230   000FF9                     PC              equ	4089	;# 
   231   000FF9                     PCL             equ	4089	;# 
   232   000FFA                     PCLATH          equ	4090	;# 
   233   000FFB                     PCLATU          equ	4091	;# 
   234   000FFC                     STKPTR          equ	4092	;# 
   235   000FFD                     TOS             equ	4093	;# 
   236   000FFD                     TOSL            equ	4093	;# 
   237   000FFE                     TOSH            equ	4094	;# 
   238   000FFF                     TOSU            equ	4095	;# 
   239   000F80                     PORTA           equ	3968	;# 
   240   000F81                     PORTB           equ	3969	;# 
   241   000F82                     PORTC           equ	3970	;# 
   242   000F83                     PORTD           equ	3971	;# 
   243   000F84                     PORTE           equ	3972	;# 
   244   000F89                     LATA            equ	3977	;# 
   245   000F8A                     LATB            equ	3978	;# 
   246   000F8B                     LATC            equ	3979	;# 
   247   000F8C                     LATD            equ	3980	;# 
   248   000F8D                     LATE            equ	3981	;# 
   249   000F92                     TRISA           equ	3986	;# 
   250   000F92                     DDRA            equ	3986	;# 
   251   000F93                     TRISB           equ	3987	;# 
   252   000F93                     DDRB            equ	3987	;# 
   253   000F94                     TRISC           equ	3988	;# 
   254   000F94                     DDRC            equ	3988	;# 
   255   000F95                     TRISD           equ	3989	;# 
   256   000F95                     DDRD            equ	3989	;# 
   257   000F96                     TRISE           equ	3990	;# 
   258   000F96                     DDRE            equ	3990	;# 
   259   000F9B                     OSCTUNE         equ	3995	;# 
   260   000F9D                     PIE1            equ	3997	;# 
   261   000F9E                     PIR1            equ	3998	;# 
   262   000F9F                     IPR1            equ	3999	;# 
   263   000FA0                     PIE2            equ	4000	;# 
   264   000FA1                     PIR2            equ	4001	;# 
   265   000FA2                     IPR2            equ	4002	;# 
   266   000FA6                     EECON1          equ	4006	;# 
   267   000FA7                     EECON2          equ	4007	;# 
   268   000FA8                     EEDATA          equ	4008	;# 
   269   000FA9                     EEADR           equ	4009	;# 
   270   000FAA                     EEADRH          equ	4010	;# 
   271   000FAB                     RCSTA           equ	4011	;# 
   272   000FAB                     RCSTA1          equ	4011	;# 
   273   000FAC                     TXSTA           equ	4012	;# 
   274   000FAC                     TXSTA1          equ	4012	;# 
   275   000FAD                     TXREG           equ	4013	;# 
   276   000FAD                     TXREG1          equ	4013	;# 
   277   000FAE                     RCREG           equ	4014	;# 
   278   000FAE                     RCREG1          equ	4014	;# 
   279   000FAF                     SPBRG           equ	4015	;# 
   280   000FAF                     SPBRG1          equ	4015	;# 
   281   000FB0                     SPBRGH          equ	4016	;# 
   282   000FB1                     T3CON           equ	4017	;# 
   283   000FB2                     TMR3            equ	4018	;# 
   284   000FB2                     TMR3L           equ	4018	;# 
   285   000FB3                     TMR3H           equ	4019	;# 
   286   000FB4                     CMCON           equ	4020	;# 
   287   000FB5                     CVRCON          equ	4021	;# 
   288   000FB6                     ECCP1AS         equ	4022	;# 
   289   000FB7                     PWM1CON         equ	4023	;# 
   290   000FB8                     BAUDCON         equ	4024	;# 
   291   000FB8                     BAUDCTL         equ	4024	;# 
   292   000FBA                     CCP2CON         equ	4026	;# 
   293   000FBB                     CCPR2           equ	4027	;# 
   294   000FBB                     CCPR2L          equ	4027	;# 
   295   000FBC                     CCPR2H          equ	4028	;# 
   296   000FBD                     CCP1CON         equ	4029	;# 
   297   000FBE                     CCPR1           equ	4030	;# 
   298   000FBE                     CCPR1L          equ	4030	;# 
   299   000FBF                     CCPR1H          equ	4031	;# 
   300   000FC0                     ADCON2          equ	4032	;# 
   301   000FC1                     ADCON1          equ	4033	;# 
   302   000FC2                     ADCON0          equ	4034	;# 
   303   000FC3                     ADRES           equ	4035	;# 
   304   000FC3                     ADRESL          equ	4035	;# 
   305   000FC4                     ADRESH          equ	4036	;# 
   306   000FC5                     SSPCON2         equ	4037	;# 
   307   000FC6                     SSPCON1         equ	4038	;# 
   308   000FC7                     SSPSTAT         equ	4039	;# 
   309   000FC8                     SSPADD          equ	4040	;# 
   310   000FC9                     SSPBUF          equ	4041	;# 
   311   000FCA                     T2CON           equ	4042	;# 
   312   000FCB                     PR2             equ	4043	;# 
   313   000FCB                     MEMCON          equ	4043	;# 
   314   000FCC                     TMR2            equ	4044	;# 
   315   000FCD                     T1CON           equ	4045	;# 
   316   000FCE                     TMR1            equ	4046	;# 
   317   000FCE                     TMR1L           equ	4046	;# 
   318   000FCF                     TMR1H           equ	4047	;# 
   319   000FD0                     RCON            equ	4048	;# 
   320   000FD1                     WDTCON          equ	4049	;# 
   321   000FD2                     HLVDCON         equ	4050	;# 
   322   000FD2                     LVDCON          equ	4050	;# 
   323   000FD3                     OSCCON          equ	4051	;# 
   324   000FD5                     T0CON           equ	4053	;# 
   325   000FD6                     TMR0            equ	4054	;# 
   326   000FD6                     TMR0L           equ	4054	;# 
   327   000FD7                     TMR0H           equ	4055	;# 
   328   000FD8                     STATUS          equ	4056	;# 
   329   000FD9                     FSR2            equ	4057	;# 
   330   000FD9                     FSR2L           equ	4057	;# 
   331   000FDA                     FSR2H           equ	4058	;# 
   332   000FDB                     PLUSW2          equ	4059	;# 
   333   000FDC                     PREINC2         equ	4060	;# 
   334   000FDD                     POSTDEC2        equ	4061	;# 
   335   000FDE                     POSTINC2        equ	4062	;# 
   336   000FDF                     INDF2           equ	4063	;# 
   337   000FE0                     BSR             equ	4064	;# 
   338   000FE1                     FSR1            equ	4065	;# 
   339   000FE1                     FSR1L           equ	4065	;# 
   340   000FE2                     FSR1H           equ	4066	;# 
   341   000FE3                     PLUSW1          equ	4067	;# 
   342   000FE4                     PREINC1         equ	4068	;# 
   343   000FE5                     POSTDEC1        equ	4069	;# 
   344   000FE6                     POSTINC1        equ	4070	;# 
   345   000FE7                     INDF1           equ	4071	;# 
   346   000FE8                     WREG            equ	4072	;# 
   347   000FE9                     FSR0            equ	4073	;# 
   348   000FE9                     FSR0L           equ	4073	;# 
   349   000FEA                     FSR0H           equ	4074	;# 
   350   000FEB                     PLUSW0          equ	4075	;# 
   351   000FEC                     PREINC0         equ	4076	;# 
   352   000FED                     POSTDEC0        equ	4077	;# 
   353   000FEE                     POSTINC0        equ	4078	;# 
   354   000FEF                     INDF0           equ	4079	;# 
   355   000FF0                     INTCON3         equ	4080	;# 
   356   000FF1                     INTCON2         equ	4081	;# 
   357   000FF2                     INTCON          equ	4082	;# 
   358   000FF3                     PROD            equ	4083	;# 
   359   000FF3                     PRODL           equ	4083	;# 
   360   000FF4                     PRODH           equ	4084	;# 
   361   000FF5                     TABLAT          equ	4085	;# 
   362   000FF6                     TBLPTR          equ	4086	;# 
   363   000FF6                     TBLPTRL         equ	4086	;# 
   364   000FF7                     TBLPTRH         equ	4087	;# 
   365   000FF8                     TBLPTRU         equ	4088	;# 
   366   000FF9                     PCLAT           equ	4089	;# 
   367   000FF9                     PC              equ	4089	;# 
   368   000FF9                     PCL             equ	4089	;# 
   369   000FFA                     PCLATH          equ	4090	;# 
   370   000FFB                     PCLATU          equ	4091	;# 
   371   000FFC                     STKPTR          equ	4092	;# 
   372   000FFD                     TOS             equ	4093	;# 
   373   000FFD                     TOSL            equ	4093	;# 
   374   000FFE                     TOSH            equ	4094	;# 
   375   000FFF                     TOSU            equ	4095	;# 
   376   000F80                     PORTA           equ	3968	;# 
   377   000F81                     PORTB           equ	3969	;# 
   378   000F82                     PORTC           equ	3970	;# 
   379   000F83                     PORTD           equ	3971	;# 
   380   000F84                     PORTE           equ	3972	;# 
   381   000F89                     LATA            equ	3977	;# 
   382   000F8A                     LATB            equ	3978	;# 
   383   000F8B                     LATC            equ	3979	;# 
   384   000F8C                     LATD            equ	3980	;# 
   385   000F8D                     LATE            equ	3981	;# 
   386   000F92                     TRISA           equ	3986	;# 
   387   000F92                     DDRA            equ	3986	;# 
   388   000F93                     TRISB           equ	3987	;# 
   389   000F93                     DDRB            equ	3987	;# 
   390   000F94                     TRISC           equ	3988	;# 
   391   000F94                     DDRC            equ	3988	;# 
   392   000F95                     TRISD           equ	3989	;# 
   393   000F95                     DDRD            equ	3989	;# 
   394   000F96                     TRISE           equ	3990	;# 
   395   000F96                     DDRE            equ	3990	;# 
   396   000F9B                     OSCTUNE         equ	3995	;# 
   397   000F9D                     PIE1            equ	3997	;# 
   398   000F9E                     PIR1            equ	3998	;# 
   399   000F9F                     IPR1            equ	3999	;# 
   400   000FA0                     PIE2            equ	4000	;# 
   401   000FA1                     PIR2            equ	4001	;# 
   402   000FA2                     IPR2            equ	4002	;# 
   403   000FA6                     EECON1          equ	4006	;# 
   404   000FA7                     EECON2          equ	4007	;# 
   405   000FA8                     EEDATA          equ	4008	;# 
   406   000FA9                     EEADR           equ	4009	;# 
   407   000FAA                     EEADRH          equ	4010	;# 
   408   000FAB                     RCSTA           equ	4011	;# 
   409   000FAB                     RCSTA1          equ	4011	;# 
   410   000FAC                     TXSTA           equ	4012	;# 
   411   000FAC                     TXSTA1          equ	4012	;# 
   412   000FAD                     TXREG           equ	4013	;# 
   413   000FAD                     TXREG1          equ	4013	;# 
   414   000FAE                     RCREG           equ	4014	;# 
   415   000FAE                     RCREG1          equ	4014	;# 
   416   000FAF                     SPBRG           equ	4015	;# 
   417   000FAF                     SPBRG1          equ	4015	;# 
   418   000FB0                     SPBRGH          equ	4016	;# 
   419   000FB1                     T3CON           equ	4017	;# 
   420   000FB2                     TMR3            equ	4018	;# 
   421   000FB2                     TMR3L           equ	4018	;# 
   422   000FB3                     TMR3H           equ	4019	;# 
   423   000FB4                     CMCON           equ	4020	;# 
   424   000FB5                     CVRCON          equ	4021	;# 
   425   000FB6                     ECCP1AS         equ	4022	;# 
   426   000FB7                     PWM1CON         equ	4023	;# 
   427   000FB8                     BAUDCON         equ	4024	;# 
   428   000FB8                     BAUDCTL         equ	4024	;# 
   429   000FBA                     CCP2CON         equ	4026	;# 
   430   000FBB                     CCPR2           equ	4027	;# 
   431   000FBB                     CCPR2L          equ	4027	;# 
   432   000FBC                     CCPR2H          equ	4028	;# 
   433   000FBD                     CCP1CON         equ	4029	;# 
   434   000FBE                     CCPR1           equ	4030	;# 
   435   000FBE                     CCPR1L          equ	4030	;# 
   436   000FBF                     CCPR1H          equ	4031	;# 
   437   000FC0                     ADCON2          equ	4032	;# 
   438   000FC1                     ADCON1          equ	4033	;# 
   439   000FC2                     ADCON0          equ	4034	;# 
   440   000FC3                     ADRES           equ	4035	;# 
   441   000FC3                     ADRESL          equ	4035	;# 
   442   000FC4                     ADRESH          equ	4036	;# 
   443   000FC5                     SSPCON2         equ	4037	;# 
   444   000FC6                     SSPCON1         equ	4038	;# 
   445   000FC7                     SSPSTAT         equ	4039	;# 
   446   000FC8                     SSPADD          equ	4040	;# 
   447   000FC9                     SSPBUF          equ	4041	;# 
   448   000FCA                     T2CON           equ	4042	;# 
   449   000FCB                     PR2             equ	4043	;# 
   450   000FCB                     MEMCON          equ	4043	;# 
   451   000FCC                     TMR2            equ	4044	;# 
   452   000FCD                     T1CON           equ	4045	;# 
   453   000FCE                     TMR1            equ	4046	;# 
   454   000FCE                     TMR1L           equ	4046	;# 
   455   000FCF                     TMR1H           equ	4047	;# 
   456   000FD0                     RCON            equ	4048	;# 
   457   000FD1                     WDTCON          equ	4049	;# 
   458   000FD2                     HLVDCON         equ	4050	;# 
   459   000FD2                     LVDCON          equ	4050	;# 
   460   000FD3                     OSCCON          equ	4051	;# 
   461   000FD5                     T0CON           equ	4053	;# 
   462   000FD6                     TMR0            equ	4054	;# 
   463   000FD6                     TMR0L           equ	4054	;# 
   464   000FD7                     TMR0H           equ	4055	;# 
   465   000FD8                     STATUS          equ	4056	;# 
   466   000FD9                     FSR2            equ	4057	;# 
   467   000FD9                     FSR2L           equ	4057	;# 
   468   000FDA                     FSR2H           equ	4058	;# 
   469   000FDB                     PLUSW2          equ	4059	;# 
   470   000FDC                     PREINC2         equ	4060	;# 
   471   000FDD                     POSTDEC2        equ	4061	;# 
   472   000FDE                     POSTINC2        equ	4062	;# 
   473   000FDF                     INDF2           equ	4063	;# 
   474   000FE0                     BSR             equ	4064	;# 
   475   000FE1                     FSR1            equ	4065	;# 
   476   000FE1                     FSR1L           equ	4065	;# 
   477   000FE2                     FSR1H           equ	4066	;# 
   478   000FE3                     PLUSW1          equ	4067	;# 
   479   000FE4                     PREINC1         equ	4068	;# 
   480   000FE5                     POSTDEC1        equ	4069	;# 
   481   000FE6                     POSTINC1        equ	4070	;# 
   482   000FE7                     INDF1           equ	4071	;# 
   483   000FE8                     WREG            equ	4072	;# 
   484   000FE9                     FSR0            equ	4073	;# 
   485   000FE9                     FSR0L           equ	4073	;# 
   486   000FEA                     FSR0H           equ	4074	;# 
   487   000FEB                     PLUSW0          equ	4075	;# 
   488   000FEC                     PREINC0         equ	4076	;# 
   489   000FED                     POSTDEC0        equ	4077	;# 
   490   000FEE                     POSTINC0        equ	4078	;# 
   491   000FEF                     INDF0           equ	4079	;# 
   492   000FF0                     INTCON3         equ	4080	;# 
   493   000FF1                     INTCON2         equ	4081	;# 
   494   000FF2                     INTCON          equ	4082	;# 
   495   000FF3                     PROD            equ	4083	;# 
   496   000FF3                     PRODL           equ	4083	;# 
   497   000FF4                     PRODH           equ	4084	;# 
   498   000FF5                     TABLAT          equ	4085	;# 
   499   000FF6                     TBLPTR          equ	4086	;# 
   500   000FF6                     TBLPTRL         equ	4086	;# 
   501   000FF7                     TBLPTRH         equ	4087	;# 
   502   000FF8                     TBLPTRU         equ	4088	;# 
   503   000FF9                     PCLAT           equ	4089	;# 
   504   000FF9                     PC              equ	4089	;# 
   505   000FF9                     PCL             equ	4089	;# 
   506   000FFA                     PCLATH          equ	4090	;# 
   507   000FFB                     PCLATU          equ	4091	;# 
   508   000FFC                     STKPTR          equ	4092	;# 
   509   000FFD                     TOS             equ	4093	;# 
   510   000FFD                     TOSL            equ	4093	;# 
   511   000FFE                     TOSH            equ	4094	;# 
   512   000FFF                     TOSU            equ	4095	;# 
   513   000F80                     PORTA           equ	3968	;# 
   514   000F81                     PORTB           equ	3969	;# 
   515   000F82                     PORTC           equ	3970	;# 
   516   000F83                     PORTD           equ	3971	;# 
   517   000F84                     PORTE           equ	3972	;# 
   518   000F89                     LATA            equ	3977	;# 
   519   000F8A                     LATB            equ	3978	;# 
   520   000F8B                     LATC            equ	3979	;# 
   521   000F8C                     LATD            equ	3980	;# 
   522   000F8D                     LATE            equ	3981	;# 
   523   000F92                     TRISA           equ	3986	;# 
   524   000F92                     DDRA            equ	3986	;# 
   525   000F93                     TRISB           equ	3987	;# 
   526   000F93                     DDRB            equ	3987	;# 
   527   000F94                     TRISC           equ	3988	;# 
   528   000F94                     DDRC            equ	3988	;# 
   529   000F95                     TRISD           equ	3989	;# 
   530   000F95                     DDRD            equ	3989	;# 
   531   000F96                     TRISE           equ	3990	;# 
   532   000F96                     DDRE            equ	3990	;# 
   533   000F9B                     OSCTUNE         equ	3995	;# 
   534   000F9D                     PIE1            equ	3997	;# 
   535   000F9E                     PIR1            equ	3998	;# 
   536   000F9F                     IPR1            equ	3999	;# 
   537   000FA0                     PIE2            equ	4000	;# 
   538   000FA1                     PIR2            equ	4001	;# 
   539   000FA2                     IPR2            equ	4002	;# 
   540   000FA6                     EECON1          equ	4006	;# 
   541   000FA7                     EECON2          equ	4007	;# 
   542   000FA8                     EEDATA          equ	4008	;# 
   543   000FA9                     EEADR           equ	4009	;# 
   544   000FAA                     EEADRH          equ	4010	;# 
   545   000FAB                     RCSTA           equ	4011	;# 
   546   000FAB                     RCSTA1          equ	4011	;# 
   547   000FAC                     TXSTA           equ	4012	;# 
   548   000FAC                     TXSTA1          equ	4012	;# 
   549   000FAD                     TXREG           equ	4013	;# 
   550   000FAD                     TXREG1          equ	4013	;# 
   551   000FAE                     RCREG           equ	4014	;# 
   552   000FAE                     RCREG1          equ	4014	;# 
   553   000FAF                     SPBRG           equ	4015	;# 
   554   000FAF                     SPBRG1          equ	4015	;# 
   555   000FB0                     SPBRGH          equ	4016	;# 
   556   000FB1                     T3CON           equ	4017	;# 
   557   000FB2                     TMR3            equ	4018	;# 
   558   000FB2                     TMR3L           equ	4018	;# 
   559   000FB3                     TMR3H           equ	4019	;# 
   560   000FB4                     CMCON           equ	4020	;# 
   561   000FB5                     CVRCON          equ	4021	;# 
   562   000FB6                     ECCP1AS         equ	4022	;# 
   563   000FB7                     PWM1CON         equ	4023	;# 
   564   000FB8                     BAUDCON         equ	4024	;# 
   565   000FB8                     BAUDCTL         equ	4024	;# 
   566   000FBA                     CCP2CON         equ	4026	;# 
   567   000FBB                     CCPR2           equ	4027	;# 
   568   000FBB                     CCPR2L          equ	4027	;# 
   569   000FBC                     CCPR2H          equ	4028	;# 
   570   000FBD                     CCP1CON         equ	4029	;# 
   571   000FBE                     CCPR1           equ	4030	;# 
   572   000FBE                     CCPR1L          equ	4030	;# 
   573   000FBF                     CCPR1H          equ	4031	;# 
   574   000FC0                     ADCON2          equ	4032	;# 
   575   000FC1                     ADCON1          equ	4033	;# 
   576   000FC2                     ADCON0          equ	4034	;# 
   577   000FC3                     ADRES           equ	4035	;# 
   578   000FC3                     ADRESL          equ	4035	;# 
   579   000FC4                     ADRESH          equ	4036	;# 
   580   000FC5                     SSPCON2         equ	4037	;# 
   581   000FC6                     SSPCON1         equ	4038	;# 
   582   000FC7                     SSPSTAT         equ	4039	;# 
   583   000FC8                     SSPADD          equ	4040	;# 
   584   000FC9                     SSPBUF          equ	4041	;# 
   585   000FCA                     T2CON           equ	4042	;# 
   586   000FCB                     PR2             equ	4043	;# 
   587   000FCB                     MEMCON          equ	4043	;# 
   588   000FCC                     TMR2            equ	4044	;# 
   589   000FCD                     T1CON           equ	4045	;# 
   590   000FCE                     TMR1            equ	4046	;# 
   591   000FCE                     TMR1L           equ	4046	;# 
   592   000FCF                     TMR1H           equ	4047	;# 
   593   000FD0                     RCON            equ	4048	;# 
   594   000FD1                     WDTCON          equ	4049	;# 
   595   000FD2                     HLVDCON         equ	4050	;# 
   596   000FD2                     LVDCON          equ	4050	;# 
   597   000FD3                     OSCCON          equ	4051	;# 
   598   000FD5                     T0CON           equ	4053	;# 
   599   000FD6                     TMR0            equ	4054	;# 
   600   000FD6                     TMR0L           equ	4054	;# 
   601   000FD7                     TMR0H           equ	4055	;# 
   602   000FD8                     STATUS          equ	4056	;# 
   603   000FD9                     FSR2            equ	4057	;# 
   604   000FD9                     FSR2L           equ	4057	;# 
   605   000FDA                     FSR2H           equ	4058	;# 
   606   000FDB                     PLUSW2          equ	4059	;# 
   607   000FDC                     PREINC2         equ	4060	;# 
   608   000FDD                     POSTDEC2        equ	4061	;# 
   609   000FDE                     POSTINC2        equ	4062	;# 
   610   000FDF                     INDF2           equ	4063	;# 
   611   000FE0                     BSR             equ	4064	;# 
   612   000FE1                     FSR1            equ	4065	;# 
   613   000FE1                     FSR1L           equ	4065	;# 
   614   000FE2                     FSR1H           equ	4066	;# 
   615   000FE3                     PLUSW1          equ	4067	;# 
   616   000FE4                     PREINC1         equ	4068	;# 
   617   000FE5                     POSTDEC1        equ	4069	;# 
   618   000FE6                     POSTINC1        equ	4070	;# 
   619   000FE7                     INDF1           equ	4071	;# 
   620   000FE8                     WREG            equ	4072	;# 
   621   000FE9                     FSR0            equ	4073	;# 
   622   000FE9                     FSR0L           equ	4073	;# 
   623   000FEA                     FSR0H           equ	4074	;# 
   624   000FEB                     PLUSW0          equ	4075	;# 
   625   000FEC                     PREINC0         equ	4076	;# 
   626   000FED                     POSTDEC0        equ	4077	;# 
   627   000FEE                     POSTINC0        equ	4078	;# 
   628   000FEF                     INDF0           equ	4079	;# 
   629   000FF0                     INTCON3         equ	4080	;# 
   630   000FF1                     INTCON2         equ	4081	;# 
   631   000FF2                     INTCON          equ	4082	;# 
   632   000FF3                     PROD            equ	4083	;# 
   633   000FF3                     PRODL           equ	4083	;# 
   634   000FF4                     PRODH           equ	4084	;# 
   635   000FF5                     TABLAT          equ	4085	;# 
   636   000FF6                     TBLPTR          equ	4086	;# 
   637   000FF6                     TBLPTRL         equ	4086	;# 
   638   000FF7                     TBLPTRH         equ	4087	;# 
   639   000FF8                     TBLPTRU         equ	4088	;# 
   640   000FF9                     PCLAT           equ	4089	;# 
   641   000FF9                     PC              equ	4089	;# 
   642   000FF9                     PCL             equ	4089	;# 
   643   000FFA                     PCLATH          equ	4090	;# 
   644   000FFB                     PCLATU          equ	4091	;# 
   645   000FFC                     STKPTR          equ	4092	;# 
   646   000FFD                     TOS             equ	4093	;# 
   647   000FFD                     TOSL            equ	4093	;# 
   648   000FFE                     TOSH            equ	4094	;# 
   649   000FFF                     TOSU            equ	4095	;# 
   650   000F80                     PORTA           equ	3968	;# 
   651   000F81                     PORTB           equ	3969	;# 
   652   000F82                     PORTC           equ	3970	;# 
   653   000F83                     PORTD           equ	3971	;# 
   654   000F84                     PORTE           equ	3972	;# 
   655   000F89                     LATA            equ	3977	;# 
   656   000F8A                     LATB            equ	3978	;# 
   657   000F8B                     LATC            equ	3979	;# 
   658   000F8C                     LATD            equ	3980	;# 
   659   000F8D                     LATE            equ	3981	;# 
   660   000F92                     TRISA           equ	3986	;# 
   661   000F92                     DDRA            equ	3986	;# 
   662   000F93                     TRISB           equ	3987	;# 
   663   000F93                     DDRB            equ	3987	;# 
   664   000F94                     TRISC           equ	3988	;# 
   665   000F94                     DDRC            equ	3988	;# 
   666   000F95                     TRISD           equ	3989	;# 
   667   000F95                     DDRD            equ	3989	;# 
   668   000F96                     TRISE           equ	3990	;# 
   669   000F96                     DDRE            equ	3990	;# 
   670   000F9B                     OSCTUNE         equ	3995	;# 
   671   000F9D                     PIE1            equ	3997	;# 
   672   000F9E                     PIR1            equ	3998	;# 
   673   000F9F                     IPR1            equ	3999	;# 
   674   000FA0                     PIE2            equ	4000	;# 
   675   000FA1                     PIR2            equ	4001	;# 
   676   000FA2                     IPR2            equ	4002	;# 
   677   000FA6                     EECON1          equ	4006	;# 
   678   000FA7                     EECON2          equ	4007	;# 
   679   000FA8                     EEDATA          equ	4008	;# 
   680   000FA9                     EEADR           equ	4009	;# 
   681   000FAA                     EEADRH          equ	4010	;# 
   682   000FAB                     RCSTA           equ	4011	;# 
   683   000FAB                     RCSTA1          equ	4011	;# 
   684   000FAC                     TXSTA           equ	4012	;# 
   685   000FAC                     TXSTA1          equ	4012	;# 
   686   000FAD                     TXREG           equ	4013	;# 
   687   000FAD                     TXREG1          equ	4013	;# 
   688   000FAE                     RCREG           equ	4014	;# 
   689   000FAE                     RCREG1          equ	4014	;# 
   690   000FAF                     SPBRG           equ	4015	;# 
   691   000FAF                     SPBRG1          equ	4015	;# 
   692   000FB0                     SPBRGH          equ	4016	;# 
   693   000FB1                     T3CON           equ	4017	;# 
   694   000FB2                     TMR3            equ	4018	;# 
   695   000FB2                     TMR3L           equ	4018	;# 
   696   000FB3                     TMR3H           equ	4019	;# 
   697   000FB4                     CMCON           equ	4020	;# 
   698   000FB5                     CVRCON          equ	4021	;# 
   699   000FB6                     ECCP1AS         equ	4022	;# 
   700   000FB7                     PWM1CON         equ	4023	;# 
   701   000FB8                     BAUDCON         equ	4024	;# 
   702   000FB8                     BAUDCTL         equ	4024	;# 
   703   000FBA                     CCP2CON         equ	4026	;# 
   704   000FBB                     CCPR2           equ	4027	;# 
   705   000FBB                     CCPR2L          equ	4027	;# 
   706   000FBC                     CCPR2H          equ	4028	;# 
   707   000FBD                     CCP1CON         equ	4029	;# 
   708   000FBE                     CCPR1           equ	4030	;# 
   709   000FBE                     CCPR1L          equ	4030	;# 
   710   000FBF                     CCPR1H          equ	4031	;# 
   711   000FC0                     ADCON2          equ	4032	;# 
   712   000FC1                     ADCON1          equ	4033	;# 
   713   000FC2                     ADCON0          equ	4034	;# 
   714   000FC3                     ADRES           equ	4035	;# 
   715   000FC3                     ADRESL          equ	4035	;# 
   716   000FC4                     ADRESH          equ	4036	;# 
   717   000FC5                     SSPCON2         equ	4037	;# 
   718   000FC6                     SSPCON1         equ	4038	;# 
   719   000FC7                     SSPSTAT         equ	4039	;# 
   720   000FC8                     SSPADD          equ	4040	;# 
   721   000FC9                     SSPBUF          equ	4041	;# 
   722   000FCA                     T2CON           equ	4042	;# 
   723   000FCB                     PR2             equ	4043	;# 
   724   000FCB                     MEMCON          equ	4043	;# 
   725   000FCC                     TMR2            equ	4044	;# 
   726   000FCD                     T1CON           equ	4045	;# 
   727   000FCE                     TMR1            equ	4046	;# 
   728   000FCE                     TMR1L           equ	4046	;# 
   729   000FCF                     TMR1H           equ	4047	;# 
   730   000FD0                     RCON            equ	4048	;# 
   731   000FD1                     WDTCON          equ	4049	;# 
   732   000FD2                     HLVDCON         equ	4050	;# 
   733   000FD2                     LVDCON          equ	4050	;# 
   734   000FD3                     OSCCON          equ	4051	;# 
   735   000FD5                     T0CON           equ	4053	;# 
   736   000FD6                     TMR0            equ	4054	;# 
   737   000FD6                     TMR0L           equ	4054	;# 
   738   000FD7                     TMR0H           equ	4055	;# 
   739   000FD8                     STATUS          equ	4056	;# 
   740   000FD9                     FSR2            equ	4057	;# 
   741   000FD9                     FSR2L           equ	4057	;# 
   742   000FDA                     FSR2H           equ	4058	;# 
   743   000FDB                     PLUSW2          equ	4059	;# 
   744   000FDC                     PREINC2         equ	4060	;# 
   745   000FDD                     POSTDEC2        equ	4061	;# 
   746   000FDE                     POSTINC2        equ	4062	;# 
   747   000FDF                     INDF2           equ	4063	;# 
   748   000FE0                     BSR             equ	4064	;# 
   749   000FE1                     FSR1            equ	4065	;# 
   750   000FE1                     FSR1L           equ	4065	;# 
   751   000FE2                     FSR1H           equ	4066	;# 
   752   000FE3                     PLUSW1          equ	4067	;# 
   753   000FE4                     PREINC1         equ	4068	;# 
   754   000FE5                     POSTDEC1        equ	4069	;# 
   755   000FE6                     POSTINC1        equ	4070	;# 
   756   000FE7                     INDF1           equ	4071	;# 
   757   000FE8                     WREG            equ	4072	;# 
   758   000FE9                     FSR0            equ	4073	;# 
   759   000FE9                     FSR0L           equ	4073	;# 
   760   000FEA                     FSR0H           equ	4074	;# 
   761   000FEB                     PLUSW0          equ	4075	;# 
   762   000FEC                     PREINC0         equ	4076	;# 
   763   000FED                     POSTDEC0        equ	4077	;# 
   764   000FEE                     POSTINC0        equ	4078	;# 
   765   000FEF                     INDF0           equ	4079	;# 
   766   000FF0                     INTCON3         equ	4080	;# 
   767   000FF1                     INTCON2         equ	4081	;# 
   768   000FF2                     INTCON          equ	4082	;# 
   769   000FF3                     PROD            equ	4083	;# 
   770   000FF3                     PRODL           equ	4083	;# 
   771   000FF4                     PRODH           equ	4084	;# 
   772   000FF5                     TABLAT          equ	4085	;# 
   773   000FF6                     TBLPTR          equ	4086	;# 
   774   000FF6                     TBLPTRL         equ	4086	;# 
   775   000FF7                     TBLPTRH         equ	4087	;# 
   776   000FF8                     TBLPTRU         equ	4088	;# 
   777   000FF9                     PCLAT           equ	4089	;# 
   778   000FF9                     PC              equ	4089	;# 
   779   000FF9                     PCL             equ	4089	;# 
   780   000FFA                     PCLATH          equ	4090	;# 
   781   000FFB                     PCLATU          equ	4091	;# 
   782   000FFC                     STKPTR          equ	4092	;# 
   783   000FFD                     TOS             equ	4093	;# 
   784   000FFD                     TOSL            equ	4093	;# 
   785   000FFE                     TOSH            equ	4094	;# 
   786   000FFF                     TOSU            equ	4095	;# 
   787                           
   788                           	psect	idataCOMRAM
   789   0017C4                     __pidataCOMRAM:
   790                           	callstack 0
   791                           
   792                           ;initializer for _lat_registers
   793   0017C4  89                 	db	137
   794   0017C5  0F                 	db	15
   795   0017C6  8A                 	db	138
   796   0017C7  0F                 	db	15
   797   0017C8  8B                 	db	139
   798   0017C9  0F                 	db	15
   799   0017CA  8C                 	db	140
   800   0017CB  0F                 	db	15
   801   0017CC  8D                 	db	141
   802   0017CD  0F                 	db	15
   803                           
   804                           ;initializer for _tris_registers
   805   0017CE  92                 	db	146
   806   0017CF  0F                 	db	15
   807   0017D0  93                 	db	147
   808   0017D1  0F                 	db	15
   809   0017D2  94                 	db	148
   810   0017D3  0F                 	db	15
   811   0017D4  95                 	db	149
   812   0017D5  0F                 	db	15
   813   0017D6  96                 	db	150
   814   0017D7  0F                 	db	15
   815                           
   816                           ;initializer for _port_registers
   817   0017D8  80                 	db	128
   818   0017D9  0F                 	db	15
   819   0017DA  81                 	db	129
   820   0017DB  0F                 	db	15
   821   0017DC  82                 	db	130
   822   0017DD  0F                 	db	15
   823   0017DE  83                 	db	131
   824   0017DF  0F                 	db	15
   825   0017E0  84                 	db	132
   826   0017E1  0F                 	db	15
   827                           
   828                           ;initializer for _bcd_codes
   829   0017E2  00                 	db	0
   830   0017E3  01                 	db	1
   831   0017E4  02                 	db	2
   832   0017E5  03                 	db	3
   833   0017E6  04                 	db	4
   834   0017E7  05                 	db	5
   835   0017E8  06                 	db	6
   836   0017E9  07                 	db	7
   837   0017EA  08                 	db	8
   838   0017EB  09                 	db	9
   839                           
   840                           ;initializer for _seconds
   841   0017EC  37                 	db	55
   842                           
   843                           ;initializer for _minutes
   844   0017ED  08                 	db	8
   845                           
   846                           ;initializer for _hours
   847   0017EE  0B                 	db	11
   848                           
   849                           ;initializer for _ssegment
   850   0017EF  10                 	db	16
   851   0017F0  11                 	db	17
   852   0017F1  12                 	db	18
   853   0017F2  13                 	db	19
   854   0017F3  00                 	db	0
   855                           
   856                           	psect	nvCOMRAM
   857   000043                     __pnvCOMRAM:
   858                           	callstack 0
   859   000043                     _ret:
   860                           	callstack 0
   861   000043                     	ds	1
   862   000F8D                     _LATE           set	3981
   863   000F8C                     _LATD           set	3980
   864   000F8B                     _LATC           set	3979
   865   000F8A                     _LATB           set	3978
   866   000F89                     _LATA           set	3977
   867   000F96                     _TRISE          set	3990
   868   000F95                     _TRISD          set	3989
   869   000F94                     _TRISC          set	3988
   870   000F93                     _TRISB          set	3987
   871   000F92                     _TRISA          set	3986
   872   000F84                     _PORTE          set	3972
   873   000F83                     _PORTD          set	3971
   874   000F82                     _PORTC          set	3970
   875   000F81                     _PORTB          set	3969
   876   000F80                     _PORTA          set	3968
   877                           
   878                           ; #config settings
   879                           
   880                           	psect	cinit
   881   001792                     __pcinit:
   882                           	callstack 0
   883   001792                     start_initialization:
   884                           	callstack 0
   885   001792                     __initialization:
   886                           	callstack 0
   887                           
   888                           ; Initialize objects allocated to COMRAM (48 bytes)
   889                           ; load TBLPTR registers with __pidataCOMRAM
   890   001792  0EC4               	movlw	low __pidataCOMRAM
   891   001794  6EF6               	movwf	tblptrl,c
   892   001796  0E17               	movlw	high __pidataCOMRAM
   893   001798  6EF7               	movwf	tblptrh,c
   894   00179A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   895   00179C  6EF8               	movwf	tblptru,c
   896   00179E  EE00  F001         	lfsr	0,__pdataCOMRAM
   897   0017A2  EE10 F030          	lfsr	1,48
   898   0017A6                     copy_data0:
   899   0017A6  0009               	tblrd		*+
   900   0017A8  CFF5 FFEE          	movff	tablat,postinc0
   901   0017AC  50E5               	movf	postdec1,w,c
   902   0017AE  50E1               	movf	fsr1l,w,c
   903   0017B0  E1FA               	bnz	copy_data0
   904                           
   905                           ; Clear objects allocated to COMRAM (4 bytes)
   906   0017B2  6A42               	clrf	(__pbssCOMRAM+3)& (0+255),c
   907   0017B4  6A41               	clrf	(__pbssCOMRAM+2)& (0+255),c
   908   0017B6  6A40               	clrf	(__pbssCOMRAM+1)& (0+255),c
   909   0017B8  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   910   0017BA                     end_of_initialization:
   911                           	callstack 0
   912   0017BA                     __end_of__initialization:
   913                           	callstack 0
   914   0017BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   915   0017BC  6EF8               	movwf	tblptru,c
   916   0017BE  0100               	movlb	0
   917   0017C0  EF01  F008         	goto	_main	;jump to C main() function
   918                           
   919                           	psect	bssCOMRAM
   920   00003F                     __pbssCOMRAM:
   921                           	callstack 0
   922   00003F                     led_toggle@F3027:
   923                           	callstack 0
   924   00003F                     	ds	1
   925   000040                     led_off@F3022:
   926                           	callstack 0
   927   000040                     	ds	1
   928   000041                     led_on@F3017:
   929                           	callstack 0
   930   000041                     	ds	1
   931   000042                     led_init@F3012:
   932                           	callstack 0
   933   000042                     	ds	1
   934                           
   935                           	psect	dataCOMRAM
   936   000001                     __pdataCOMRAM:
   937                           	callstack 0
   938   000001                     _lat_registers:
   939                           	callstack 0
   940   000001                     	ds	10
   941   00000B                     _tris_registers:
   942                           	callstack 0
   943   00000B                     	ds	10
   944   000015                     _port_registers:
   945                           	callstack 0
   946   000015                     	ds	10
   947   00001F                     _bcd_codes:
   948                           	callstack 0
   949   00001F                     	ds	10
   950   000029                     _seconds:
   951                           	callstack 0
   952   000029                     	ds	1
   953   00002A                     _minutes:
   954                           	callstack 0
   955   00002A                     	ds	1
   956   00002B                     _hours:
   957                           	callstack 0
   958   00002B                     	ds	1
   959   00002C                     _ssegment:
   960                           	callstack 0
   961   00002C                     	ds	5
   962                           
   963                           	psect	cstackCOMRAM
   964   000031                     __pcstackCOMRAM:
   965                           	callstack 0
   966   000031                     ?___awdiv:
   967                           	callstack 0
   968   000031                     ?___awmod:
   969                           	callstack 0
   970   000031                     gbio_pin_direction_init@pin_config:
   971                           	callstack 0
   972   000031                     gbio_pin_write_logic@pin_config:
   973                           	callstack 0
   974   000031                     gbio_port_direction_init@direction:
   975                           	callstack 0
   976   000031                     gbio_port_write_logic@logic:
   977                           	callstack 0
   978   000031                     ___awdiv@dividend:
   979                           	callstack 0
   980   000031                     ___awmod@dividend:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x0
   984   000031                     	ds	1
   985   000032                     gbio_pin_write_logic@logic:
   986                           	callstack 0
   987   000032                     ??_gbio_pin_direction_init:
   988   000032                     ??_gbio_port_direction_init:
   989   000032                     ??_gbio_port_write_logic:
   990                           
   991                           ; 1 bytes @ 0x1
   992   000032                     	ds	1
   993   000033                     ___awdiv@divisor:
   994                           	callstack 0
   995   000033                     ___awmod@divisor:
   996                           	callstack 0
   997   000033                     ??_gbio_pin_write_logic:
   998                           
   999                           ; 1 bytes @ 0x2
  1000   000033                     	ds	1
  1001   000034                     gbio_port_direction_init@port:
  1002                           	callstack 0
  1003   000034                     gbio_port_write_logic@port:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x3
  1007   000034                     	ds	1
  1008   000035                     ___awdiv@counter:
  1009                           	callstack 0
  1010   000035                     ___awmod@counter:
  1011                           	callstack 0
  1012   000035                     
  1013                           ; 1 bytes @ 0x4
  1014   000035                     	ds	1
  1015   000036                     ___awdiv@sign:
  1016                           	callstack 0
  1017   000036                     ___awmod@sign:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x5
  1021   000036                     	ds	1
  1022   000037                     ___awdiv@quotient:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x6
  1026   000037                     	ds	1
  1027   000038                     gbio_pin_init@pin_config:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x7
  1031   000038                     	ds	1
  1032   000039                     seven_segment_write_number@ssegment:
  1033                           	callstack 0
  1034   000039                     ??_gbio_pin_init:
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037   000039                     	ds	1
  1038   00003A                     seven_segment_write_number@number:
  1039                           	callstack 0
  1040   00003A                     gbio_pin_init@ret:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x9
  1044   00003A                     	ds	1
  1045   00003B                     seven_segment_init@ssegment:
  1046                           	callstack 0
  1047   00003B                     
  1048                           ; 1 bytes @ 0xA
  1049   00003B                     	ds	1
  1050   00003C                     seven_segment_init@ret:
  1051                           	callstack 0
  1052   00003C                     seven_segment_write_number@ret:
  1053                           	callstack 0
  1054   00003C                     
  1055                           ; 1 bytes @ 0xB
  1056   00003C                     	ds	1
  1057   00003D                     ??_main:
  1058                           
  1059                           ; 1 bytes @ 0xC
  1060   00003D                     	ds	1
  1061   00003E                     main@l_time:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0xD
  1065   00003E                     	ds	1
  1066                           
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 15 in file "app.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  l_time          1   13[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  2  198[None  ] int 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels required when called: 4
  1092 ;; This function calls:
  1093 ;;		___awdiv
  1094 ;;		___awmod
  1095 ;;		_gbio_port_write_logic
  1096 ;;		_init
  1097 ;;		_seven_segment_write_number
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text0
  1104   001002                     __ptext0:
  1105                           	callstack 0
  1106   001002                     _main:
  1107                           	callstack 27
  1108   001002                     
  1109                           ;app.c: 16:     init();
  1110   001002  ECFA  F00B         	call	_init	;wreg free
  1111   001006                     l1608:
  1112                           
  1113                           ;app.c: 19:         for (uint8 l_time = 0x00; l_time <= 50; ++l_time) {
  1114   001006  6A3E               	clrf	main@l_time^0,c
  1115   001008                     l1614:
  1116                           
  1117                           ;app.c: 20:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1118   001008  0E00               	movlw	0
  1119   00100A  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1120   00100C  0E03               	movlw	3
  1121   00100E  ECAB  F00B         	call	_gbio_port_write_logic
  1122   001012  6E43               	movwf	_ret^0,c
  1123                           
  1124                           ;app.c: 23:             ret = seven_segment_write_number(&ssegment, ((uint8) (seconds / 
      +                          10)));
  1125   001014  0E2C               	movlw	low _ssegment
  1126   001016  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1127   001018  C029  F031         	movff	_seconds,___awdiv@dividend
  1128   00101C  6A32               	clrf	(___awdiv@dividend+1)^0,c
  1129   00101E  0E00               	movlw	0
  1130   001020  6E34               	movwf	(___awdiv@divisor+1)^0,c
  1131   001022  0E0A               	movlw	10
  1132   001024  6E33               	movwf	___awdiv@divisor^0,c
  1133   001026  EC2E  F00A         	call	___awdiv	;wreg free
  1134   00102A  5031               	movf	?___awdiv^0,w,c
  1135   00102C  6E3A               	movwf	seven_segment_write_number@number^0,c
  1136   00102E  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1137   001032  6E43               	movwf	_ret^0,c
  1138                           
  1139                           ;app.c: 24:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 64);
  1140   001034  0E40               	movlw	64
  1141   001036  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1142   001038  0E03               	movlw	3
  1143   00103A  ECAB  F00B         	call	_gbio_port_write_logic
  1144   00103E  6E43               	movwf	_ret^0,c
  1145   001040                     
  1146                           ;app.c: 25:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1147   001040  0E09               	movlw	9
  1148   001042  6E3D               	movwf	??_main^0,c
  1149   001044  0EA7               	movlw	167
  1150   001046                     u1067:
  1151   001046  2EE8               	decfsz	wreg,f,c
  1152   001048  D7FE               	bra	u1067
  1153   00104A  2E3D               	decfsz	??_main^0,f,c
  1154   00104C  D7FC               	bra	u1067
  1155   00104E  0000               	nop	
  1156   001050                     
  1157                           ;app.c: 26:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1158   001050  0E00               	movlw	0
  1159   001052  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1160   001054  0E03               	movlw	3
  1161   001056  ECAB  F00B         	call	_gbio_port_write_logic
  1162   00105A  6E43               	movwf	_ret^0,c
  1163   00105C                     
  1164                           ;app.c: 28:             ret = seven_segment_write_number(&ssegment, ((uint8) (seconds % 
      +                          10)));
  1165   00105C  0E2C               	movlw	low _ssegment
  1166   00105E  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1167   001060  C029  F031         	movff	_seconds,___awmod@dividend
  1168   001064  6A32               	clrf	(___awmod@dividend+1)^0,c
  1169   001066  0E00               	movlw	0
  1170   001068  6E34               	movwf	(___awmod@divisor+1)^0,c
  1171   00106A  0E0A               	movlw	10
  1172   00106C  6E33               	movwf	___awmod@divisor^0,c
  1173   00106E  EC8F  F00A         	call	___awmod	;wreg free
  1174   001072  5031               	movf	?___awmod^0,w,c
  1175   001074  6E3A               	movwf	seven_segment_write_number@number^0,c
  1176   001076  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1177   00107A  6E43               	movwf	_ret^0,c
  1178   00107C                     
  1179                           ;app.c: 29:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 128);
  1180   00107C  0E80               	movlw	128
  1181   00107E  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1182   001080  0E03               	movlw	3
  1183   001082  ECAB  F00B         	call	_gbio_port_write_logic
  1184   001086  6E43               	movwf	_ret^0,c
  1185                           
  1186                           ;app.c: 30:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1187   001088  0E09               	movlw	9
  1188   00108A  6E3D               	movwf	??_main^0,c
  1189   00108C  0EA7               	movlw	167
  1190   00108E                     u1077:
  1191   00108E  2EE8               	decfsz	wreg,f,c
  1192   001090  D7FE               	bra	u1077
  1193   001092  2E3D               	decfsz	??_main^0,f,c
  1194   001094  D7FC               	bra	u1077
  1195   001096  0000               	nop	
  1196   001098                     
  1197                           ;app.c: 31:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1198   001098  0E00               	movlw	0
  1199   00109A  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1200   00109C  0E03               	movlw	3
  1201   00109E  ECAB  F00B         	call	_gbio_port_write_logic
  1202   0010A2  6E43               	movwf	_ret^0,c
  1203   0010A4                     
  1204                           ;app.c: 33:             ret = seven_segment_write_number(&ssegment, ((uint8) (minutes / 
      +                          10)));
  1205   0010A4  0E2C               	movlw	low _ssegment
  1206   0010A6  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1207   0010A8  C02A  F031         	movff	_minutes,___awdiv@dividend
  1208   0010AC  6A32               	clrf	(___awdiv@dividend+1)^0,c
  1209   0010AE  0E00               	movlw	0
  1210   0010B0  6E34               	movwf	(___awdiv@divisor+1)^0,c
  1211   0010B2  0E0A               	movlw	10
  1212   0010B4  6E33               	movwf	___awdiv@divisor^0,c
  1213   0010B6  EC2E  F00A         	call	___awdiv	;wreg free
  1214   0010BA  5031               	movf	?___awdiv^0,w,c
  1215   0010BC  6E3A               	movwf	seven_segment_write_number@number^0,c
  1216   0010BE  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1217   0010C2  6E43               	movwf	_ret^0,c
  1218   0010C4                     
  1219                           ;app.c: 34:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 8);
  1220   0010C4  0E08               	movlw	8
  1221   0010C6  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1222   0010C8  0E03               	movlw	3
  1223   0010CA  ECAB  F00B         	call	_gbio_port_write_logic
  1224   0010CE  6E43               	movwf	_ret^0,c
  1225   0010D0                     
  1226                           ;app.c: 35:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1227   0010D0  0E09               	movlw	9
  1228   0010D2  6E3D               	movwf	??_main^0,c
  1229   0010D4  0EA7               	movlw	167
  1230   0010D6                     u1087:
  1231   0010D6  2EE8               	decfsz	wreg,f,c
  1232   0010D8  D7FE               	bra	u1087
  1233   0010DA  2E3D               	decfsz	??_main^0,f,c
  1234   0010DC  D7FC               	bra	u1087
  1235   0010DE  0000               	nop	
  1236                           
  1237                           ;app.c: 36:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1238   0010E0  0E00               	movlw	0
  1239   0010E2  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1240   0010E4  0E03               	movlw	3
  1241   0010E6  ECAB  F00B         	call	_gbio_port_write_logic
  1242   0010EA  6E43               	movwf	_ret^0,c
  1243                           
  1244                           ;app.c: 38:             ret = seven_segment_write_number(&ssegment, ((uint8) (minutes % 
      +                          10)));
  1245   0010EC  0E2C               	movlw	low _ssegment
  1246   0010EE  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1247   0010F0  C02A  F031         	movff	_minutes,___awmod@dividend
  1248   0010F4  6A32               	clrf	(___awmod@dividend+1)^0,c
  1249   0010F6  0E00               	movlw	0
  1250   0010F8  6E34               	movwf	(___awmod@divisor+1)^0,c
  1251   0010FA  0E0A               	movlw	10
  1252   0010FC  6E33               	movwf	___awmod@divisor^0,c
  1253   0010FE  EC8F  F00A         	call	___awmod	;wreg free
  1254   001102  5031               	movf	?___awmod^0,w,c
  1255   001104  6E3A               	movwf	seven_segment_write_number@number^0,c
  1256   001106  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1257   00110A  6E43               	movwf	_ret^0,c
  1258                           
  1259                           ;app.c: 39:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 16);
  1260   00110C  0E10               	movlw	16
  1261   00110E  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1262   001110  0E03               	movlw	3
  1263   001112  ECAB  F00B         	call	_gbio_port_write_logic
  1264   001116  6E43               	movwf	_ret^0,c
  1265   001118                     
  1266                           ;app.c: 40:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1267   001118  0E09               	movlw	9
  1268   00111A  6E3D               	movwf	??_main^0,c
  1269   00111C  0EA7               	movlw	167
  1270   00111E                     u1097:
  1271   00111E  2EE8               	decfsz	wreg,f,c
  1272   001120  D7FE               	bra	u1097
  1273   001122  2E3D               	decfsz	??_main^0,f,c
  1274   001124  D7FC               	bra	u1097
  1275   001126  0000               	nop	
  1276   001128                     
  1277                           ;app.c: 41:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1278   001128  0E00               	movlw	0
  1279   00112A  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1280   00112C  0E03               	movlw	3
  1281   00112E  ECAB  F00B         	call	_gbio_port_write_logic
  1282   001132  6E43               	movwf	_ret^0,c
  1283   001134                     
  1284                           ;app.c: 43:             ret = seven_segment_write_number(&ssegment, ((uint8) (hours / 10
      +                          )));
  1285   001134  0E2C               	movlw	low _ssegment
  1286   001136  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1287   001138  C02B  F031         	movff	_hours,___awdiv@dividend
  1288   00113C  6A32               	clrf	(___awdiv@dividend+1)^0,c
  1289   00113E  0E00               	movlw	0
  1290   001140  6E34               	movwf	(___awdiv@divisor+1)^0,c
  1291   001142  0E0A               	movlw	10
  1292   001144  6E33               	movwf	___awdiv@divisor^0,c
  1293   001146  EC2E  F00A         	call	___awdiv	;wreg free
  1294   00114A  5031               	movf	?___awdiv^0,w,c
  1295   00114C  6E3A               	movwf	seven_segment_write_number@number^0,c
  1296   00114E  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1297   001152  6E43               	movwf	_ret^0,c
  1298   001154                     
  1299                           ;app.c: 44:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 1);
  1300   001154  0E01               	movlw	1
  1301   001156  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1302   001158  0E03               	movlw	3
  1303   00115A  ECAB  F00B         	call	_gbio_port_write_logic
  1304   00115E  6E43               	movwf	_ret^0,c
  1305                           
  1306                           ;app.c: 45:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1307   001160  0E09               	movlw	9
  1308   001162  6E3D               	movwf	??_main^0,c
  1309   001164  0EA7               	movlw	167
  1310   001166                     u1107:
  1311   001166  2EE8               	decfsz	wreg,f,c
  1312   001168  D7FE               	bra	u1107
  1313   00116A  2E3D               	decfsz	??_main^0,f,c
  1314   00116C  D7FC               	bra	u1107
  1315   00116E  0000               	nop	
  1316   001170                     
  1317                           ;app.c: 46:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1318   001170  0E00               	movlw	0
  1319   001172  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1320   001174  0E03               	movlw	3
  1321   001176  ECAB  F00B         	call	_gbio_port_write_logic
  1322   00117A  6E43               	movwf	_ret^0,c
  1323   00117C                     
  1324                           ;app.c: 48:             ret = seven_segment_write_number(&ssegment, ((uint8) (hours % 10
      +                          )));
  1325   00117C  0E2C               	movlw	low _ssegment
  1326   00117E  6E39               	movwf	seven_segment_write_number@ssegment^0,c
  1327   001180  C02B  F031         	movff	_hours,___awmod@dividend
  1328   001184  6A32               	clrf	(___awmod@dividend+1)^0,c
  1329   001186  0E00               	movlw	0
  1330   001188  6E34               	movwf	(___awmod@divisor+1)^0,c
  1331   00118A  0E0A               	movlw	10
  1332   00118C  6E33               	movwf	___awmod@divisor^0,c
  1333   00118E  EC8F  F00A         	call	___awmod	;wreg free
  1334   001192  5031               	movf	?___awmod^0,w,c
  1335   001194  6E3A               	movwf	seven_segment_write_number@number^0,c
  1336   001196  ECE6  F00A         	call	_seven_segment_write_number	;wreg free
  1337   00119A  6E43               	movwf	_ret^0,c
  1338   00119C                     
  1339                           ;app.c: 49:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 2);
  1340   00119C  0E02               	movlw	2
  1341   00119E  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1342   0011A0  0E03               	movlw	3
  1343   0011A2  ECAB  F00B         	call	_gbio_port_write_logic
  1344   0011A6  6E43               	movwf	_ret^0,c
  1345   0011A8                     
  1346                           ;app.c: 50:             _delay((unsigned long)((3.333)*(8000000/4000.0)));
  1347   0011A8  0E09               	movlw	9
  1348   0011AA  6E3D               	movwf	??_main^0,c
  1349   0011AC  0EA7               	movlw	167
  1350   0011AE                     u1117:
  1351   0011AE  2EE8               	decfsz	wreg,f,c
  1352   0011B0  D7FE               	bra	u1117
  1353   0011B2  2E3D               	decfsz	??_main^0,f,c
  1354   0011B4  D7FC               	bra	u1117
  1355   0011B6  0000               	nop	
  1356                           
  1357                           ;app.c: 51:             ret = gbio_port_write_logic(GPIO_PORTD_INDEX, 0);
  1358   0011B8  0E00               	movlw	0
  1359   0011BA  6E31               	movwf	gbio_port_write_logic@logic^0,c
  1360   0011BC  0E03               	movlw	3
  1361   0011BE  ECAB  F00B         	call	_gbio_port_write_logic
  1362   0011C2  6E43               	movwf	_ret^0,c
  1363   0011C4                     
  1364                           ;app.c: 53:         }
  1365   0011C4  2A3E               	incf	main@l_time^0,f,c
  1366   0011C6  0E32               	movlw	50
  1367   0011C8  643E               	cpfsgt	main@l_time^0,c
  1368   0011CA  EFE9  F008         	goto	u1021
  1369   0011CE  EFEB  F008         	goto	u1020
  1370   0011D2                     u1021:
  1371   0011D2  EF04  F008         	goto	l1614
  1372   0011D6                     u1020:
  1373   0011D6                     
  1374                           ;app.c: 54:         ++seconds;
  1375   0011D6  2A29               	incf	_seconds^0,f,c
  1376   0011D8                     
  1377                           ;app.c: 55:         if (seconds > 60) {
  1378   0011D8  0E3C               	movlw	60
  1379   0011DA  6429               	cpfsgt	_seconds^0,c
  1380   0011DC  EFF2  F008         	goto	u1031
  1381   0011E0  EFF4  F008         	goto	u1030
  1382   0011E4                     u1031:
  1383   0011E4  EFF6  F008         	goto	l1660
  1384   0011E8                     u1030:
  1385   0011E8                     
  1386                           ;app.c: 56:             ++minutes;
  1387   0011E8  2A2A               	incf	_minutes^0,f,c
  1388   0011EA                     
  1389                           ;app.c: 57:             seconds = 0;
  1390   0011EA  6A29               	clrf	_seconds^0,c
  1391   0011EC                     l1660:
  1392                           
  1393                           ;app.c: 59:         if (minutes > 60) {
  1394   0011EC  0E3C               	movlw	60
  1395   0011EE  642A               	cpfsgt	_minutes^0,c
  1396   0011F0  EFFC  F008         	goto	u1041
  1397   0011F4  EFFE  F008         	goto	u1040
  1398   0011F8                     u1041:
  1399   0011F8  EF00  F009         	goto	l1666
  1400   0011FC                     u1040:
  1401   0011FC                     
  1402                           ;app.c: 60:             ++hours;
  1403   0011FC  2A2B               	incf	_hours^0,f,c
  1404   0011FE                     
  1405                           ;app.c: 61:             minutes = 0;
  1406   0011FE  6A2A               	clrf	_minutes^0,c
  1407   001200                     l1666:
  1408                           
  1409                           ;app.c: 63:         if (hours > 12) {
  1410   001200  0E0C               	movlw	12
  1411   001202  642B               	cpfsgt	_hours^0,c
  1412   001204  EF06  F009         	goto	u1051
  1413   001208  EF08  F009         	goto	u1050
  1414   00120C                     u1051:
  1415   00120C  EF03  F008         	goto	l1608
  1416   001210                     u1050:
  1417   001210                     
  1418                           ;app.c: 64:             hours = 0;
  1419   001210  6A2B               	clrf	_hours^0,c
  1420   001212  EF03  F008         	goto	l1608
  1421   001216  EFFE  F07F         	goto	start
  1422   00121A                     __end_of_main:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _seven_segment_write_number *****************
  1426 ;; Defined at:
  1427 ;;		line 23 in file "ECU/7SEG/seven_segment.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  ssegment        1    8[COMRAM] PTR const struct .
  1430 ;;		 -> ssegment(5), 
  1431 ;;  number          1    9[COMRAM] unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  ret             1   11[COMRAM] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      unsigned char 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        4 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 1
  1450 ;; This function calls:
  1451 ;;		_gbio_pin_write_logic
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text1
  1458   0015CC                     __ptext1:
  1459                           	callstack 0
  1460   0015CC                     _seven_segment_write_number:
  1461                           	callstack 29
  1462   0015CC                     
  1463                           ;ECU/7SEG/seven_segment.c: 25:     if (((void*)0) == ssegment || number > 9) {
  1464   0015CC  5039               	movf	seven_segment_write_number@ssegment^0,w,c
  1465   0015CE  B4D8               	btfsc	status,2,c
  1466   0015D0  EFEC  F00A         	goto	u801
  1467   0015D4  EFEE  F00A         	goto	u800
  1468   0015D8                     u801:
  1469   0015D8  EFF6  F00A         	goto	l16
  1470   0015DC                     u800:
  1471   0015DC  0E09               	movlw	9
  1472   0015DE  643A               	cpfsgt	seven_segment_write_number@number^0,c
  1473   0015E0  EFF4  F00A         	goto	u811
  1474   0015E4  EFF6  F00A         	goto	u810
  1475   0015E8                     u811:
  1476   0015E8  EFF9  F00A         	goto	l1442
  1477   0015EC                     u810:
  1478   0015EC                     l16:
  1479                           
  1480                           ;ECU/7SEG/seven_segment.c: 26:         ret = (Std_ReturnType)0x00;
  1481   0015EC  6A3C               	clrf	seven_segment_write_number@ret^0,c
  1482                           
  1483                           ;ECU/7SEG/seven_segment.c: 27:     } else {
  1484   0015EE  EF2E  F00B         	goto	l1454
  1485   0015F2                     l1442:
  1486                           
  1487                           ;ECU/7SEG/seven_segment.c: 28:         if (COMMON_CATHODE == ssegment->seven_segment_typ
      +                          e) {
  1488   0015F2  5039               	movf	seven_segment_write_number@ssegment^0,w,c
  1489   0015F4  6ED9               	movwf	fsr2l,c
  1490   0015F6  6ADA               	clrf	fsr2h,c
  1491   0015F8  0E04               	movlw	4
  1492   0015FA  26D9               	addwf	fsr2l,f,c
  1493   0015FC  04DE               	decf	postinc2,w,c
  1494   0015FE  A4D8               	btfss	status,2,c
  1495   001600  EF04  F00B         	goto	u821
  1496   001604  EF06  F00B         	goto	u820
  1497   001608                     u821:
  1498   001608  EF07  F00B         	goto	l1446
  1499   00160C                     u820:
  1500   00160C                     
  1501                           ;ECU/7SEG/seven_segment.c: 29:             number = ~(number);
  1502   00160C  1E3A               	comf	seven_segment_write_number@number^0,f,c
  1503   00160E                     l1446:
  1504                           
  1505                           ;ECU/7SEG/seven_segment.c: 31:         ret = gbio_pin_write_logic(&ssegment->pins[PIN0],
      +                           ((number >> PIN0) & 0x01));
  1506   00160E  C039  F031         	movff	seven_segment_write_number@ssegment,gbio_pin_write_logic@pin_config
  1507   001612  503A               	movf	seven_segment_write_number@number^0,w,c
  1508   001614  0B01               	andlw	1
  1509   001616  6E32               	movwf	gbio_pin_write_logic@logic^0,c
  1510   001618  ECA3  F009         	call	_gbio_pin_write_logic	;wreg free
  1511   00161C  6E3C               	movwf	seven_segment_write_number@ret^0,c
  1512   00161E                     
  1513                           ;ECU/7SEG/seven_segment.c: 32:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN1]
      +                          , ((number >> PIN1) & 0x01));
  1514   00161E  2839               	incf	seven_segment_write_number@ssegment^0,w,c
  1515   001620  6E31               	movwf	gbio_pin_write_logic@pin_config^0,c
  1516   001622  90D8               	bcf	status,0,c
  1517   001624  303A               	rrcf	seven_segment_write_number@number^0,w,c
  1518   001626  0B01               	andlw	1
  1519   001628  6E32               	movwf	gbio_pin_write_logic@logic^0,c
  1520   00162A  ECA3  F009         	call	_gbio_pin_write_logic	;wreg free
  1521   00162E  123C               	iorwf	seven_segment_write_number@ret^0,f,c
  1522   001630                     
  1523                           ;ECU/7SEG/seven_segment.c: 33:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN2]
      +                          , ((number >> PIN2) & 0x01));
  1524   001630  5039               	movf	seven_segment_write_number@ssegment^0,w,c
  1525   001632  0F02               	addlw	2
  1526   001634  6E31               	movwf	gbio_pin_write_logic@pin_config^0,c
  1527   001636  403A               	rrncf	seven_segment_write_number@number^0,w,c
  1528   001638  42E8               	rrncf	wreg,f,c
  1529   00163A  0B3F               	andlw	63
  1530   00163C  0B01               	andlw	1
  1531   00163E  6E32               	movwf	gbio_pin_write_logic@logic^0,c
  1532   001640  ECA3  F009         	call	_gbio_pin_write_logic	;wreg free
  1533   001644  123C               	iorwf	seven_segment_write_number@ret^0,f,c
  1534   001646                     
  1535                           ;ECU/7SEG/seven_segment.c: 34:         ret |= gbio_pin_write_logic(&ssegment->pins[PIN3]
      +                          , ((number >> PIN3) & 0x01));
  1536   001646  5039               	movf	seven_segment_write_number@ssegment^0,w,c
  1537   001648  0F03               	addlw	3
  1538   00164A  6E31               	movwf	gbio_pin_write_logic@pin_config^0,c
  1539   00164C  383A               	swapf	seven_segment_write_number@number^0,w,c
  1540   00164E  46E8               	rlncf	wreg,f,c
  1541   001650  0B1F               	andlw	31
  1542   001652  0B01               	andlw	1
  1543   001654  6E32               	movwf	gbio_pin_write_logic@logic^0,c
  1544   001656  ECA3  F009         	call	_gbio_pin_write_logic	;wreg free
  1545   00165A  123C               	iorwf	seven_segment_write_number@ret^0,f,c
  1546   00165C                     l1454:
  1547                           
  1548                           ;ECU/7SEG/seven_segment.c: 36:     return ret;
  1549   00165C  503C               	movf	seven_segment_write_number@ret^0,w,c
  1550   00165E  0012               	return		;funcret
  1551   001660                     __end_of_seven_segment_write_number:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _init *****************
  1555 ;; Defined at:
  1556 ;;		line 31 in file "ECU/ecu_init.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 3
  1577 ;; This function calls:
  1578 ;;		_gbio_port_direction_init
  1579 ;;		_seven_segment_init
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text2
  1586   0017F4                     __ptext2:
  1587                           	callstack 0
  1588   0017F4                     _init:
  1589                           	callstack 27
  1590   0017F4                     
  1591                           ;ECU/ecu_init.c: 32:     ret = seven_segment_init(&ssegment);
  1592   0017F4  0E2C               	movlw	low _ssegment
  1593   0017F6  6E3B               	movwf	seven_segment_init@ssegment^0,c
  1594   0017F8  EC6A  F00B         	call	_seven_segment_init	;wreg free
  1595   0017FC  6E43               	movwf	_ret^0,c
  1596                           
  1597                           ;ECU/ecu_init.c: 33:     ret = gbio_port_direction_init(GPIO_PORTD_INDEX,0);
  1598   0017FE  0E00               	movlw	0
  1599   001800  6E31               	movwf	gbio_port_direction_init@direction^0,c
  1600   001802  0E03               	movlw	3
  1601   001804  EC8D  F00B         	call	_gbio_port_direction_init
  1602   001808  6E43               	movwf	_ret^0,c
  1603   00180A  0012               	return		;funcret
  1604   00180C                     __end_of_init:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _seven_segment_init *****************
  1608 ;; Defined at:
  1609 ;;		line 8 in file "ECU/7SEG/seven_segment.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  ssegment        1   10[COMRAM] PTR const struct .
  1612 ;;		 -> ssegment(5), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  ret             1   11[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 2
  1631 ;; This function calls:
  1632 ;;		_gbio_pin_init
  1633 ;; This function is called by:
  1634 ;;		_init
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text3
  1639   0016D4                     __ptext3:
  1640                           	callstack 0
  1641   0016D4                     _seven_segment_init:
  1642                           	callstack 27
  1643   0016D4                     
  1644                           ;ECU/7SEG/seven_segment.c: 10:     if (((void*)0) == ssegment) {
  1645   0016D4  503B               	movf	seven_segment_init@ssegment^0,w,c
  1646   0016D6  A4D8               	btfss	status,2,c
  1647   0016D8  EF70  F00B         	goto	u781
  1648   0016DC  EF72  F00B         	goto	u780
  1649   0016E0                     u781:
  1650   0016E0  EF75  F00B         	goto	l1414
  1651   0016E4                     u780:
  1652   0016E4                     
  1653                           ;ECU/7SEG/seven_segment.c: 11:         ret = (Std_ReturnType)0x00;
  1654   0016E4  6A3C               	clrf	seven_segment_init@ret^0,c
  1655                           
  1656                           ;ECU/7SEG/seven_segment.c: 12:     } else {
  1657   0016E6  EF8B  F00B         	goto	l1416
  1658   0016EA                     l1414:
  1659                           
  1660                           ;ECU/7SEG/seven_segment.c: 14:         ret = gbio_pin_init(&ssegment->pins[PIN0]);
  1661   0016EA  C03B  F038         	movff	seven_segment_init@ssegment,gbio_pin_init@pin_config
  1662   0016EE  EC30  F00B         	call	_gbio_pin_init	;wreg free
  1663   0016F2  6E3C               	movwf	seven_segment_init@ret^0,c
  1664                           
  1665                           ;ECU/7SEG/seven_segment.c: 15:         ret |= gbio_pin_init(&ssegment->pins[PIN1]);
  1666   0016F4  283B               	incf	seven_segment_init@ssegment^0,w,c
  1667   0016F6  6E38               	movwf	gbio_pin_init@pin_config^0,c
  1668   0016F8  EC30  F00B         	call	_gbio_pin_init	;wreg free
  1669   0016FC  123C               	iorwf	seven_segment_init@ret^0,f,c
  1670                           
  1671                           ;ECU/7SEG/seven_segment.c: 16:         ret |= gbio_pin_init(&ssegment->pins[PIN2]);
  1672   0016FE  503B               	movf	seven_segment_init@ssegment^0,w,c
  1673   001700  0F02               	addlw	2
  1674   001702  6E38               	movwf	gbio_pin_init@pin_config^0,c
  1675   001704  EC30  F00B         	call	_gbio_pin_init	;wreg free
  1676   001708  123C               	iorwf	seven_segment_init@ret^0,f,c
  1677                           
  1678                           ;ECU/7SEG/seven_segment.c: 17:         ret |= gbio_pin_init(&ssegment->pins[PIN3]);
  1679   00170A  503B               	movf	seven_segment_init@ssegment^0,w,c
  1680   00170C  0F03               	addlw	3
  1681   00170E  6E38               	movwf	gbio_pin_init@pin_config^0,c
  1682   001710  EC30  F00B         	call	_gbio_pin_init	;wreg free
  1683   001714  123C               	iorwf	seven_segment_init@ret^0,f,c
  1684   001716                     l1416:
  1685                           
  1686                           ;ECU/7SEG/seven_segment.c: 20:     return ret;
  1687   001716  503C               	movf	seven_segment_init@ret^0,w,c
  1688   001718  0012               	return		;funcret
  1689   00171A                     __end_of_seven_segment_init:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _gbio_pin_init *****************
  1693 ;; Defined at:
  1694 ;;		line 15 in file "MCAL/GPIO/hal_gbio.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  pin_config      1    7[COMRAM] PTR const struct .
  1697 ;;		 -> ssegment$pins(4), ssegment(5), led_init@pin_obj(1), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  ret             1    9[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 1
  1716 ;; This function calls:
  1717 ;;		_gbio_pin_direction_init
  1718 ;;		_gbio_pin_write_logic
  1719 ;; This function is called by:
  1720 ;;		_seven_segment_init
  1721 ;;		_led_init
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text4
  1726   001660                     __ptext4:
  1727                           	callstack 0
  1728   001660                     _gbio_pin_init:
  1729                           	callstack 27
  1730   001660                     
  1731                           ;MCAL/GPIO/hal_gbio.c: 17:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->pin > (5 - 1))) {
  1732   001660  5038               	movf	gbio_pin_init@pin_config^0,w,c
  1733   001662  B4D8               	btfsc	status,2,c
  1734   001664  EF36  F00B         	goto	u751
  1735   001668  EF38  F00B         	goto	u750
  1736   00166C                     u751:
  1737   00166C  EF54  F00B         	goto	l1398
  1738   001670                     u750:
  1739   001670  5038               	movf	gbio_pin_init@pin_config^0,w,c
  1740   001672  6ED9               	movwf	fsr2l,c
  1741   001674  6ADA               	clrf	fsr2h,c
  1742   001676  50DF               	movf	223,w,c
  1743   001678  0B07               	andlw	7
  1744   00167A  6E39               	movwf	??_gbio_pin_init^0,c
  1745   00167C  0E08               	movlw	8
  1746   00167E  6039               	cpfslt	??_gbio_pin_init^0,c
  1747   001680  EF44  F00B         	goto	u761
  1748   001684  EF46  F00B         	goto	u760
  1749   001688                     u761:
  1750   001688  EF54  F00B         	goto	l1398
  1751   00168C                     u760:
  1752   00168C  5038               	movf	gbio_pin_init@pin_config^0,w,c
  1753   00168E  6ED9               	movwf	fsr2l,c
  1754   001690  6ADA               	clrf	fsr2h,c
  1755   001692  50DF               	movf	223,w,c
  1756   001694  0B07               	andlw	7
  1757   001696  6E39               	movwf	??_gbio_pin_init^0,c
  1758   001698  0E04               	movlw	4
  1759   00169A  6439               	cpfsgt	??_gbio_pin_init^0,c
  1760   00169C  EF52  F00B         	goto	u771
  1761   0016A0  EF54  F00B         	goto	u770
  1762   0016A4                     u771:
  1763   0016A4  EF57  F00B         	goto	l1404
  1764   0016A8                     u770:
  1765   0016A8                     l1398:
  1766                           
  1767                           ;MCAL/GPIO/hal_gbio.c: 18:         return ret;
  1768   0016A8  0E00               	movlw	0
  1769   0016AA  EF69  F00B         	goto	l99
  1770   0016AE                     l1404:
  1771                           
  1772                           ;MCAL/GPIO/hal_gbio.c: 20:         ret = gbio_pin_direction_init(pin_config);
  1773   0016AE  C038  F031         	movff	gbio_pin_init@pin_config,gbio_pin_direction_init@pin_config
  1774   0016B2  EC0D  F009         	call	_gbio_pin_direction_init	;wreg free
  1775   0016B6  6E3A               	movwf	gbio_pin_init@ret^0,c
  1776                           
  1777                           ;MCAL/GPIO/hal_gbio.c: 21:         ret |= gbio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
  1778   0016B8  C038  F031         	movff	gbio_pin_init@pin_config,gbio_pin_write_logic@pin_config
  1779   0016BC  5038               	movf	gbio_pin_init@pin_config^0,w,c
  1780   0016BE  6ED9               	movwf	fsr2l,c
  1781   0016C0  6ADA               	clrf	fsr2h,c
  1782   0016C2  0E00               	movlw	0
  1783   0016C4  BCDF               	btfsc	indf2,6,c
  1784   0016C6  0E01               	movlw	1
  1785   0016C8  6E32               	movwf	gbio_pin_write_logic@logic^0,c
  1786   0016CA  ECA3  F009         	call	_gbio_pin_write_logic	;wreg free
  1787   0016CE  123A               	iorwf	gbio_pin_init@ret^0,f,c
  1788   0016D0                     
  1789                           ;MCAL/GPIO/hal_gbio.c: 23:     return ret;
  1790   0016D0  503A               	movf	gbio_pin_init@ret^0,w,c
  1791   0016D2                     l99:
  1792   0016D2  0012               	return		;funcret
  1793   0016D4                     __end_of_gbio_pin_init:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function _gbio_pin_write_logic *****************
  1797 ;; Defined at:
  1798 ;;		line 65 in file "MCAL/GPIO/hal_gbio.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1801 ;;		 -> ssegment$pins(4), ssegment(5), led_off@pin_obj(1), led_on@pin_obj(1), 
  1802 ;;		 -> led_init@pin_obj(1), 
  1803 ;;  logic           1    1[COMRAM] unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  ret             1    0        unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        7 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_seven_segment_write_number
  1825 ;;		_gbio_pin_init
  1826 ;;		_led_on
  1827 ;;		_led_off
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text5
  1832   001346                     __ptext5:
  1833                           	callstack 0
  1834   001346                     _gbio_pin_write_logic:
  1835                           	callstack 29
  1836   001346                     
  1837                           ;MCAL/GPIO/hal_gbio.c: 67:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->port > (5 - 1))) {
  1838   001346  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1839   001348  B4D8               	btfsc	status,2,c
  1840   00134A  EFA9  F009         	goto	u641
  1841   00134E  EFAB  F009         	goto	u640
  1842   001352                     u641:
  1843   001352  EFC9  F009         	goto	l1350
  1844   001356                     u640:
  1845   001356  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1846   001358  6ED9               	movwf	fsr2l,c
  1847   00135A  6ADA               	clrf	fsr2h,c
  1848   00135C  50DF               	movf	223,w,c
  1849   00135E  0B07               	andlw	7
  1850   001360  6E33               	movwf	??_gbio_pin_write_logic^0,c
  1851   001362  0E08               	movlw	8
  1852   001364  6033               	cpfslt	??_gbio_pin_write_logic^0,c
  1853   001366  EFB7  F009         	goto	u651
  1854   00136A  EFB9  F009         	goto	u650
  1855   00136E                     u651:
  1856   00136E  EFC9  F009         	goto	l1350
  1857   001372                     u650:
  1858   001372  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1859   001374  6ED9               	movwf	fsr2l,c
  1860   001376  6ADA               	clrf	fsr2h,c
  1861   001378  30DF               	rrcf	223,w,c
  1862   00137A  32E8               	rrcf	wreg,f,c
  1863   00137C  32E8               	rrcf	wreg,f,c
  1864   00137E  0B07               	andlw	7
  1865   001380  6E33               	movwf	??_gbio_pin_write_logic^0,c
  1866   001382  0E04               	movlw	4
  1867   001384  6433               	cpfsgt	??_gbio_pin_write_logic^0,c
  1868   001386  EFC7  F009         	goto	u661
  1869   00138A  EFC9  F009         	goto	u660
  1870   00138E                     u661:
  1871   00138E  EF21  F00A         	goto	l1360
  1872   001392                     u660:
  1873   001392                     l1350:
  1874                           
  1875                           ;MCAL/GPIO/hal_gbio.c: 68:         return ret;
  1876   001392  0E00               	movlw	0
  1877   001394  EF2D  F00A         	goto	l125
  1878   001398                     l1356:
  1879                           
  1880                           ;MCAL/GPIO/hal_gbio.c: 72:                 (*lat_registers[pin_config->port] &= ~((uint8
      +                          )1 << pin_config->pin));
  1881   001398  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1882   00139A  6ED9               	movwf	fsr2l,c
  1883   00139C  6ADA               	clrf	fsr2h,c
  1884   00139E  50DF               	movf	223,w,c
  1885   0013A0  0B07               	andlw	7
  1886   0013A2  6E33               	movwf	??_gbio_pin_write_logic^0,c
  1887   0013A4  0E01               	movlw	1
  1888   0013A6  6E34               	movwf	(??_gbio_pin_write_logic+1)^0,c
  1889   0013A8  2A33               	incf	??_gbio_pin_write_logic^0,f,c
  1890   0013AA  EFD9  F009         	goto	u674
  1891   0013AE                     u675:
  1892   0013AE  90D8               	bcf	status,0,c
  1893   0013B0  3634               	rlcf	(??_gbio_pin_write_logic+1)^0,f,c
  1894   0013B2                     u674:
  1895   0013B2  2E33               	decfsz	??_gbio_pin_write_logic^0,f,c
  1896   0013B4  EFD7  F009         	goto	u675
  1897   0013B8  5034               	movf	(??_gbio_pin_write_logic+1)^0,w,c
  1898   0013BA  0AFF               	xorlw	255
  1899   0013BC  6E35               	movwf	(??_gbio_pin_write_logic+2)^0,c
  1900   0013BE  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1901   0013C0  6ED9               	movwf	fsr2l,c
  1902   0013C2  6ADA               	clrf	fsr2h,c
  1903   0013C4  30DF               	rrcf	223,w,c
  1904   0013C6  32E8               	rrcf	wreg,f,c
  1905   0013C8  32E8               	rrcf	wreg,f,c
  1906   0013CA  0B07               	andlw	7
  1907   0013CC  0D02               	mullw	2
  1908   0013CE  50F3               	movf	243,w,c
  1909   0013D0  0F01               	addlw	low _lat_registers
  1910   0013D2  6ED9               	movwf	fsr2l,c
  1911   0013D4  6ADA               	clrf	fsr2h,c
  1912   0013D6  CFDE F036          	movff	postinc2,??_gbio_pin_write_logic+3
  1913   0013DA  CFDD F037          	movff	postdec2,??_gbio_pin_write_logic+4
  1914   0013DE  C036  FFD9         	movff	??_gbio_pin_write_logic+3,fsr2l
  1915   0013E2  C037  FFDA         	movff	??_gbio_pin_write_logic+4,fsr2h
  1916   0013E6  5035               	movf	(??_gbio_pin_write_logic+2)^0,w,c
  1917   0013E8  16DF               	andwf	indf2,f,c
  1918                           
  1919                           ;MCAL/GPIO/hal_gbio.c: 73:                 break;
  1920   0013EA  EF2C  F00A         	goto	l1362
  1921   0013EE                     l1358:
  1922                           
  1923                           ;MCAL/GPIO/hal_gbio.c: 75:                 (*lat_registers[pin_config->port] |= ((uint8)
      +                          1 << pin_config->pin));
  1924   0013EE  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1925   0013F0  6ED9               	movwf	fsr2l,c
  1926   0013F2  6ADA               	clrf	fsr2h,c
  1927   0013F4  50DF               	movf	223,w,c
  1928   0013F6  0B07               	andlw	7
  1929   0013F8  6E33               	movwf	??_gbio_pin_write_logic^0,c
  1930   0013FA  0E01               	movlw	1
  1931   0013FC  6E34               	movwf	(??_gbio_pin_write_logic+1)^0,c
  1932   0013FE  2A33               	incf	??_gbio_pin_write_logic^0,f,c
  1933   001400  EF04  F00A         	goto	u684
  1934   001404                     u685:
  1935   001404  90D8               	bcf	status,0,c
  1936   001406  3634               	rlcf	(??_gbio_pin_write_logic+1)^0,f,c
  1937   001408                     u684:
  1938   001408  2E33               	decfsz	??_gbio_pin_write_logic^0,f,c
  1939   00140A  EF02  F00A         	goto	u685
  1940   00140E  5031               	movf	gbio_pin_write_logic@pin_config^0,w,c
  1941   001410  6ED9               	movwf	fsr2l,c
  1942   001412  6ADA               	clrf	fsr2h,c
  1943   001414  30DF               	rrcf	223,w,c
  1944   001416  32E8               	rrcf	wreg,f,c
  1945   001418  32E8               	rrcf	wreg,f,c
  1946   00141A  0B07               	andlw	7
  1947   00141C  0D02               	mullw	2
  1948   00141E  50F3               	movf	243,w,c
  1949   001420  0F01               	addlw	low _lat_registers
  1950   001422  6ED9               	movwf	fsr2l,c
  1951   001424  6ADA               	clrf	fsr2h,c
  1952   001426  CFDE F035          	movff	postinc2,??_gbio_pin_write_logic+2
  1953   00142A  CFDD F036          	movff	postdec2,??_gbio_pin_write_logic+3
  1954   00142E  C035  FFD9         	movff	??_gbio_pin_write_logic+2,fsr2l
  1955   001432  C036  FFDA         	movff	??_gbio_pin_write_logic+3,fsr2h
  1956   001436  5034               	movf	(??_gbio_pin_write_logic+1)^0,w,c
  1957   001438  12DF               	iorwf	indf2,f,c
  1958                           
  1959                           ;MCAL/GPIO/hal_gbio.c: 76:                 break;
  1960   00143A  EF2C  F00A         	goto	l1362
  1961   00143E                     l131:
  1962                           
  1963                           ;MCAL/GPIO/hal_gbio.c: 78:         }
  1964   00143E  EF2C  F00A         	goto	l1362
  1965   001442                     l1360:
  1966   001442  5032               	movf	gbio_pin_write_logic@logic^0,w,c
  1967                           
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 2, Range of values is 0 to 1
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            7     4 (average)
  1973                           ;	Chosen strategy is simple_byte
  1974   001444  0A00               	xorlw	0	; case 0
  1975   001446  B4D8               	btfsc	status,2,c
  1976   001448  EFCC  F009         	goto	l1356
  1977   00144C  0A01               	xorlw	1	; case 1
  1978   00144E  B4D8               	btfsc	status,2,c
  1979   001450  EFF7  F009         	goto	l1358
  1980   001454  EF1F  F00A         	goto	l131
  1981   001458                     l1362:
  1982   001458                     
  1983                           ;MCAL/GPIO/hal_gbio.c: 81:     return ret;
  1984   001458  0E01               	movlw	1
  1985   00145A                     l125:
  1986   00145A  0012               	return		;funcret
  1987   00145C                     __end_of_gbio_pin_write_logic:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _gbio_pin_direction_init *****************
  1991 ;; Defined at:
  1992 ;;		line 29 in file "MCAL/GPIO/hal_gbio.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1995 ;;		 -> ssegment$pins(4), ssegment(5), led_init@pin_obj(1), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  ret             1    0        unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        6 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_gbio_pin_init
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text6
  2021   00121A                     __ptext6:
  2022                           	callstack 0
  2023   00121A                     _gbio_pin_direction_init:
  2024                           	callstack 27
  2025   00121A                     
  2026                           ;MCAL/GPIO/hal_gbio.c: 31:     if ((pin_config == ((void*)0)) || (pin_config->pin > (8 -
      +                           1)) || (pin_config->port > (5 - 1))) {
  2027   00121A  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2028   00121C  B4D8               	btfsc	status,2,c
  2029   00121E  EF13  F009         	goto	u691
  2030   001222  EF15  F009         	goto	u690
  2031   001226                     u691:
  2032   001226  EF33  F009         	goto	l1374
  2033   00122A                     u690:
  2034   00122A  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2035   00122C  6ED9               	movwf	fsr2l,c
  2036   00122E  6ADA               	clrf	fsr2h,c
  2037   001230  50DF               	movf	223,w,c
  2038   001232  0B07               	andlw	7
  2039   001234  6E32               	movwf	??_gbio_pin_direction_init^0,c
  2040   001236  0E08               	movlw	8
  2041   001238  6032               	cpfslt	??_gbio_pin_direction_init^0,c
  2042   00123A  EF21  F009         	goto	u701
  2043   00123E  EF23  F009         	goto	u700
  2044   001242                     u701:
  2045   001242  EF33  F009         	goto	l1374
  2046   001246                     u700:
  2047   001246  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2048   001248  6ED9               	movwf	fsr2l,c
  2049   00124A  6ADA               	clrf	fsr2h,c
  2050   00124C  30DF               	rrcf	223,w,c
  2051   00124E  32E8               	rrcf	wreg,f,c
  2052   001250  32E8               	rrcf	wreg,f,c
  2053   001252  0B07               	andlw	7
  2054   001254  6E32               	movwf	??_gbio_pin_direction_init^0,c
  2055   001256  0E04               	movlw	4
  2056   001258  6432               	cpfsgt	??_gbio_pin_direction_init^0,c
  2057   00125A  EF31  F009         	goto	u711
  2058   00125E  EF33  F009         	goto	u710
  2059   001262                     u711:
  2060   001262  EF8B  F009         	goto	l1384
  2061   001266                     u710:
  2062   001266                     l1374:
  2063                           
  2064                           ;MCAL/GPIO/hal_gbio.c: 32:         return ret;
  2065   001266  0E00               	movlw	0
  2066   001268  EFA2  F009         	goto	l106
  2067   00126C                     l1380:
  2068                           
  2069                           ;MCAL/GPIO/hal_gbio.c: 36:                 (*tris_registers[pin_config->port] &= ~((uint
      +                          8)1 << pin_config->pin));
  2070   00126C  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2071   00126E  6ED9               	movwf	fsr2l,c
  2072   001270  6ADA               	clrf	fsr2h,c
  2073   001272  50DF               	movf	223,w,c
  2074   001274  0B07               	andlw	7
  2075   001276  6E32               	movwf	??_gbio_pin_direction_init^0,c
  2076   001278  0E01               	movlw	1
  2077   00127A  6E33               	movwf	(??_gbio_pin_direction_init+1)^0,c
  2078   00127C  2A32               	incf	??_gbio_pin_direction_init^0,f,c
  2079   00127E  EF43  F009         	goto	u724
  2080   001282                     u725:
  2081   001282  90D8               	bcf	status,0,c
  2082   001284  3633               	rlcf	(??_gbio_pin_direction_init+1)^0,f,c
  2083   001286                     u724:
  2084   001286  2E32               	decfsz	??_gbio_pin_direction_init^0,f,c
  2085   001288  EF41  F009         	goto	u725
  2086   00128C  5033               	movf	(??_gbio_pin_direction_init+1)^0,w,c
  2087   00128E  0AFF               	xorlw	255
  2088   001290  6E34               	movwf	(??_gbio_pin_direction_init+2)^0,c
  2089   001292  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2090   001294  6ED9               	movwf	fsr2l,c
  2091   001296  6ADA               	clrf	fsr2h,c
  2092   001298  30DF               	rrcf	223,w,c
  2093   00129A  32E8               	rrcf	wreg,f,c
  2094   00129C  32E8               	rrcf	wreg,f,c
  2095   00129E  0B07               	andlw	7
  2096   0012A0  0D02               	mullw	2
  2097   0012A2  50F3               	movf	243,w,c
  2098   0012A4  0F0B               	addlw	low _tris_registers
  2099   0012A6  6ED9               	movwf	fsr2l,c
  2100   0012A8  6ADA               	clrf	fsr2h,c
  2101   0012AA  CFDE F035          	movff	postinc2,??_gbio_pin_direction_init+3
  2102   0012AE  CFDD F036          	movff	postdec2,??_gbio_pin_direction_init+4
  2103   0012B2  C035  FFD9         	movff	??_gbio_pin_direction_init+3,fsr2l
  2104   0012B6  C036  FFDA         	movff	??_gbio_pin_direction_init+4,fsr2h
  2105   0012BA  5034               	movf	(??_gbio_pin_direction_init+2)^0,w,c
  2106   0012BC  16DF               	andwf	indf2,f,c
  2107                           
  2108                           ;MCAL/GPIO/hal_gbio.c: 37:                 break;
  2109   0012BE  EFA1  F009         	goto	l1386
  2110   0012C2                     l1382:
  2111                           
  2112                           ;MCAL/GPIO/hal_gbio.c: 39:                 (*tris_registers[pin_config->port] |= ((uint8
      +                          )1 << pin_config->pin));
  2113   0012C2  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2114   0012C4  6ED9               	movwf	fsr2l,c
  2115   0012C6  6ADA               	clrf	fsr2h,c
  2116   0012C8  50DF               	movf	223,w,c
  2117   0012CA  0B07               	andlw	7
  2118   0012CC  6E32               	movwf	??_gbio_pin_direction_init^0,c
  2119   0012CE  0E01               	movlw	1
  2120   0012D0  6E33               	movwf	(??_gbio_pin_direction_init+1)^0,c
  2121   0012D2  2A32               	incf	??_gbio_pin_direction_init^0,f,c
  2122   0012D4  EF6E  F009         	goto	u734
  2123   0012D8                     u735:
  2124   0012D8  90D8               	bcf	status,0,c
  2125   0012DA  3633               	rlcf	(??_gbio_pin_direction_init+1)^0,f,c
  2126   0012DC                     u734:
  2127   0012DC  2E32               	decfsz	??_gbio_pin_direction_init^0,f,c
  2128   0012DE  EF6C  F009         	goto	u735
  2129   0012E2  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2130   0012E4  6ED9               	movwf	fsr2l,c
  2131   0012E6  6ADA               	clrf	fsr2h,c
  2132   0012E8  30DF               	rrcf	223,w,c
  2133   0012EA  32E8               	rrcf	wreg,f,c
  2134   0012EC  32E8               	rrcf	wreg,f,c
  2135   0012EE  0B07               	andlw	7
  2136   0012F0  0D02               	mullw	2
  2137   0012F2  50F3               	movf	243,w,c
  2138   0012F4  0F0B               	addlw	low _tris_registers
  2139   0012F6  6ED9               	movwf	fsr2l,c
  2140   0012F8  6ADA               	clrf	fsr2h,c
  2141   0012FA  CFDE F034          	movff	postinc2,??_gbio_pin_direction_init+2
  2142   0012FE  CFDD F035          	movff	postdec2,??_gbio_pin_direction_init+3
  2143   001302  C034  FFD9         	movff	??_gbio_pin_direction_init+2,fsr2l
  2144   001306  C035  FFDA         	movff	??_gbio_pin_direction_init+3,fsr2h
  2145   00130A  5033               	movf	(??_gbio_pin_direction_init+1)^0,w,c
  2146   00130C  12DF               	iorwf	indf2,f,c
  2147                           
  2148                           ;MCAL/GPIO/hal_gbio.c: 40:                 break;
  2149   00130E  EFA1  F009         	goto	l1386
  2150   001312                     l112:
  2151                           
  2152                           ;MCAL/GPIO/hal_gbio.c: 42:         }
  2153   001312  EFA1  F009         	goto	l1386
  2154   001316                     l1384:
  2155   001316  5031               	movf	gbio_pin_direction_init@pin_config^0,w,c
  2156   001318  6ED9               	movwf	fsr2l,c
  2157   00131A  6ADA               	clrf	fsr2h,c
  2158   00131C  BEDF               	btfsc	indf2,7,c
  2159   00131E  EF93  F009         	goto	u741
  2160   001322  EF96  F009         	goto	u740
  2161   001326                     u741:
  2162   001326  0E01               	movlw	1
  2163   001328  EF97  F009         	goto	u746
  2164   00132C                     u740:
  2165   00132C  0E00               	movlw	0
  2166   00132E                     u746:
  2167                           
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 2, Range of values is 0 to 1
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte            7     4 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174   00132E  0A00               	xorlw	0	; case 0
  2175   001330  B4D8               	btfsc	status,2,c
  2176   001332  EF36  F009         	goto	l1380
  2177   001336  0A01               	xorlw	1	; case 1
  2178   001338  B4D8               	btfsc	status,2,c
  2179   00133A  EF61  F009         	goto	l1382
  2180   00133E  EF89  F009         	goto	l112
  2181   001342                     l1386:
  2182   001342                     
  2183                           ;MCAL/GPIO/hal_gbio.c: 45:     return ret;
  2184   001342  0E01               	movlw	1
  2185   001344                     l106:
  2186   001344  0012               	return		;funcret
  2187   001346                     __end_of_gbio_pin_direction_init:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _gbio_port_direction_init *****************
  2191 ;; Defined at:
  2192 ;;		line 116 in file "MCAL/GPIO/hal_gbio.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  port            1    wreg     enum E2950
  2195 ;;  direction       1    0[COMRAM] unsigned char 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  port            1    3[COMRAM] enum E2950
  2198 ;;  ret             1    0        unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      unsigned char 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        4 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_init
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text7
  2222   00171A                     __ptext7:
  2223                           	callstack 0
  2224   00171A                     _gbio_port_direction_init:
  2225                           	callstack 29
  2226                           
  2227                           ;incstack = 0
  2228                           ;gbio_port_direction_init@port stored from wreg
  2229   00171A  6E34               	movwf	gbio_port_direction_init@port^0,c
  2230   00171C                     
  2231                           ;MCAL/GPIO/hal_gbio.c: 118:     if (port > (5 - 1)) {
  2232   00171C  0E04               	movlw	4
  2233   00171E  6434               	cpfsgt	gbio_port_direction_init@port^0,c
  2234   001720  EF94  F00B         	goto	u791
  2235   001724  EF96  F00B         	goto	u790
  2236   001728                     u791:
  2237   001728  EF99  F00B         	goto	l1430
  2238   00172C                     u790:
  2239   00172C                     
  2240                           ;MCAL/GPIO/hal_gbio.c: 119:         return ret;
  2241   00172C  0E00               	movlw	0
  2242   00172E  EFAA  F00B         	goto	l149
  2243   001732                     l1430:
  2244                           
  2245                           ;MCAL/GPIO/hal_gbio.c: 121:         *tris_registers[port] = direction;
  2246   001732  5034               	movf	gbio_port_direction_init@port^0,w,c
  2247   001734  0D02               	mullw	2
  2248   001736  50F3               	movf	243,w,c
  2249   001738  0F0B               	addlw	low _tris_registers
  2250   00173A  6ED9               	movwf	fsr2l,c
  2251   00173C  6ADA               	clrf	fsr2h,c
  2252   00173E  CFDE F032          	movff	postinc2,??_gbio_port_direction_init
  2253   001742  CFDD F033          	movff	postdec2,??_gbio_port_direction_init+1
  2254   001746  C032  FFD9         	movff	??_gbio_port_direction_init,fsr2l
  2255   00174A  C033  FFDA         	movff	??_gbio_port_direction_init+1,fsr2h
  2256   00174E  C031  FFDF         	movff	gbio_port_direction_init@direction,indf2
  2257   001752                     
  2258                           ;MCAL/GPIO/hal_gbio.c: 124:     return ret;
  2259   001752  0E01               	movlw	1
  2260   001754                     l149:
  2261   001754  0012               	return		;funcret
  2262   001756                     __end_of_gbio_port_direction_init:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function _gbio_port_write_logic *****************
  2266 ;; Defined at:
  2267 ;;		line 144 in file "MCAL/GPIO/hal_gbio.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  port            1    wreg     enum E2950
  2270 ;;  logic           1    0[COMRAM] unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  port            1    3[COMRAM] enum E2950
  2273 ;;  ret             1    0        unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      unsigned char 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;Total ram usage:        4 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text8
  2297   001756                     __ptext8:
  2298                           	callstack 0
  2299   001756                     _gbio_port_write_logic:
  2300                           	callstack 30
  2301                           
  2302                           ;incstack = 0
  2303                           ;gbio_port_write_logic@port stored from wreg
  2304   001756  6E34               	movwf	gbio_port_write_logic@port^0,c
  2305   001758                     
  2306                           ;MCAL/GPIO/hal_gbio.c: 146:     if (port > (5 - 1)) {
  2307   001758  0E04               	movlw	4
  2308   00175A  6434               	cpfsgt	gbio_port_write_logic@port^0,c
  2309   00175C  EFB2  F00B         	goto	u831
  2310   001760  EFB4  F00B         	goto	u830
  2311   001764                     u831:
  2312   001764  EFB7  F00B         	goto	l1468
  2313   001768                     u830:
  2314   001768                     
  2315                           ;MCAL/GPIO/hal_gbio.c: 147:         return ret;
  2316   001768  0E00               	movlw	0
  2317   00176A  EFC8  F00B         	goto	l161
  2318   00176E                     l1468:
  2319                           
  2320                           ;MCAL/GPIO/hal_gbio.c: 149:         *lat_registers[port] = logic;
  2321   00176E  5034               	movf	gbio_port_write_logic@port^0,w,c
  2322   001770  0D02               	mullw	2
  2323   001772  50F3               	movf	243,w,c
  2324   001774  0F01               	addlw	low _lat_registers
  2325   001776  6ED9               	movwf	fsr2l,c
  2326   001778  6ADA               	clrf	fsr2h,c
  2327   00177A  CFDE F032          	movff	postinc2,??_gbio_port_write_logic
  2328   00177E  CFDD F033          	movff	postdec2,??_gbio_port_write_logic+1
  2329   001782  C032  FFD9         	movff	??_gbio_port_write_logic,fsr2l
  2330   001786  C033  FFDA         	movff	??_gbio_port_write_logic+1,fsr2h
  2331   00178A  C031  FFDF         	movff	gbio_port_write_logic@logic,indf2
  2332   00178E                     
  2333                           ;MCAL/GPIO/hal_gbio.c: 152:     return ret;
  2334   00178E  0E01               	movlw	1
  2335   001790                     l161:
  2336   001790  0012               	return		;funcret
  2337   001792                     __end_of_gbio_port_write_logic:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function ___awmod *****************
  2341 ;; Defined at:
  2342 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  dividend        2    0[COMRAM] int 
  2345 ;;  divisor         2    2[COMRAM] int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  sign            1    5[COMRAM] unsigned char 
  2348 ;;  counter         1    4[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2    0[COMRAM] int 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        6 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text9
  2372   00151E                     __ptext9:
  2373                           	callstack 0
  2374   00151E                     ___awmod:
  2375                           	callstack 30
  2376   00151E  6A36               	clrf	___awmod@sign^0,c
  2377   001520  BE32               	btfsc	(___awmod@dividend+1)^0,7,c
  2378   001522  EF97  F00A         	goto	u900
  2379   001526  EF95  F00A         	goto	u901
  2380   00152A                     u901:
  2381   00152A  EF9D  F00A         	goto	l1530
  2382   00152E                     u900:
  2383   00152E  6C31               	negf	___awmod@dividend^0,c
  2384   001530  1E32               	comf	(___awmod@dividend+1)^0,f,c
  2385   001532  B0D8               	btfsc	status,0,c
  2386   001534  2A32               	incf	(___awmod@dividend+1)^0,f,c
  2387   001536  0E01               	movlw	1
  2388   001538  6E36               	movwf	___awmod@sign^0,c
  2389   00153A                     l1530:
  2390   00153A  BE34               	btfsc	(___awmod@divisor+1)^0,7,c
  2391   00153C  EFA4  F00A         	goto	u910
  2392   001540  EFA2  F00A         	goto	u911
  2393   001544                     u911:
  2394   001544  EFA8  F00A         	goto	l1534
  2395   001548                     u910:
  2396   001548  6C33               	negf	___awmod@divisor^0,c
  2397   00154A  1E34               	comf	(___awmod@divisor+1)^0,f,c
  2398   00154C  B0D8               	btfsc	status,0,c
  2399   00154E  2A34               	incf	(___awmod@divisor+1)^0,f,c
  2400   001550                     l1534:
  2401   001550  5033               	movf	___awmod@divisor^0,w,c
  2402   001552  1034               	iorwf	(___awmod@divisor+1)^0,w,c
  2403   001554  B4D8               	btfsc	status,2,c
  2404   001556  EFAF  F00A         	goto	u921
  2405   00155A  EFB1  F00A         	goto	u920
  2406   00155E                     u921:
  2407   00155E  EFD5  F00A         	goto	l1550
  2408   001562                     u920:
  2409   001562  0E01               	movlw	1
  2410   001564  6E35               	movwf	___awmod@counter^0,c
  2411   001566  EFB9  F00A         	goto	l1540
  2412   00156A                     l1538:
  2413   00156A  90D8               	bcf	status,0,c
  2414   00156C  3633               	rlcf	___awmod@divisor^0,f,c
  2415   00156E  3634               	rlcf	(___awmod@divisor+1)^0,f,c
  2416   001570  2A35               	incf	___awmod@counter^0,f,c
  2417   001572                     l1540:
  2418   001572  AE34               	btfss	(___awmod@divisor+1)^0,7,c
  2419   001574  EFBE  F00A         	goto	u931
  2420   001578  EFC0  F00A         	goto	u930
  2421   00157C                     u931:
  2422   00157C  EFB5  F00A         	goto	l1538
  2423   001580                     u930:
  2424   001580                     l1542:
  2425   001580  5033               	movf	___awmod@divisor^0,w,c
  2426   001582  5C31               	subwf	___awmod@dividend^0,w,c
  2427   001584  5034               	movf	(___awmod@divisor+1)^0,w,c
  2428   001586  5832               	subwfb	(___awmod@dividend+1)^0,w,c
  2429   001588  A0D8               	btfss	status,0,c
  2430   00158A  EFC9  F00A         	goto	u941
  2431   00158E  EFCB  F00A         	goto	u940
  2432   001592                     u941:
  2433   001592  EFCF  F00A         	goto	l1546
  2434   001596                     u940:
  2435   001596  5033               	movf	___awmod@divisor^0,w,c
  2436   001598  5E31               	subwf	___awmod@dividend^0,f,c
  2437   00159A  5034               	movf	(___awmod@divisor+1)^0,w,c
  2438   00159C  5A32               	subwfb	(___awmod@dividend+1)^0,f,c
  2439   00159E                     l1546:
  2440   00159E  90D8               	bcf	status,0,c
  2441   0015A0  3234               	rrcf	(___awmod@divisor+1)^0,f,c
  2442   0015A2  3233               	rrcf	___awmod@divisor^0,f,c
  2443   0015A4  2E35               	decfsz	___awmod@counter^0,f,c
  2444   0015A6  EFC0  F00A         	goto	l1542
  2445   0015AA                     l1550:
  2446   0015AA  5036               	movf	___awmod@sign^0,w,c
  2447   0015AC  B4D8               	btfsc	status,2,c
  2448   0015AE  EFDB  F00A         	goto	u951
  2449   0015B2  EFDD  F00A         	goto	u950
  2450   0015B6                     u951:
  2451   0015B6  EFE1  F00A         	goto	l1554
  2452   0015BA                     u950:
  2453   0015BA  6C31               	negf	___awmod@dividend^0,c
  2454   0015BC  1E32               	comf	(___awmod@dividend+1)^0,f,c
  2455   0015BE  B0D8               	btfsc	status,0,c
  2456   0015C0  2A32               	incf	(___awmod@dividend+1)^0,f,c
  2457   0015C2                     l1554:
  2458   0015C2  C031  F031         	movff	___awmod@dividend,?___awmod
  2459   0015C6  C032  F032         	movff	___awmod@dividend+1,?___awmod+1
  2460   0015CA  0012               	return		;funcret
  2461   0015CC                     __end_of___awmod:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function ___awdiv *****************
  2465 ;; Defined at:
  2466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  dividend        2    0[COMRAM] int 
  2469 ;;  divisor         2    2[COMRAM] int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  quotient        2    6[COMRAM] int 
  2472 ;;  sign            1    5[COMRAM] unsigned char 
  2473 ;;  counter         1    4[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    0[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        8 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text10
  2497   00145C                     __ptext10:
  2498                           	callstack 0
  2499   00145C                     ___awdiv:
  2500                           	callstack 30
  2501   00145C  6A36               	clrf	___awdiv@sign^0,c
  2502   00145E  BE34               	btfsc	(___awdiv@divisor+1)^0,7,c
  2503   001460  EF36  F00A         	goto	u840
  2504   001464  EF34  F00A         	goto	u841
  2505   001468                     u841:
  2506   001468  EF3C  F00A         	goto	l1486
  2507   00146C                     u840:
  2508   00146C  6C33               	negf	___awdiv@divisor^0,c
  2509   00146E  1E34               	comf	(___awdiv@divisor+1)^0,f,c
  2510   001470  B0D8               	btfsc	status,0,c
  2511   001472  2A34               	incf	(___awdiv@divisor+1)^0,f,c
  2512   001474  0E01               	movlw	1
  2513   001476  6E36               	movwf	___awdiv@sign^0,c
  2514   001478                     l1486:
  2515   001478  BE32               	btfsc	(___awdiv@dividend+1)^0,7,c
  2516   00147A  EF43  F00A         	goto	u850
  2517   00147E  EF41  F00A         	goto	u851
  2518   001482                     u851:
  2519   001482  EF49  F00A         	goto	l1492
  2520   001486                     u850:
  2521   001486  6C31               	negf	___awdiv@dividend^0,c
  2522   001488  1E32               	comf	(___awdiv@dividend+1)^0,f,c
  2523   00148A  B0D8               	btfsc	status,0,c
  2524   00148C  2A32               	incf	(___awdiv@dividend+1)^0,f,c
  2525   00148E  0E01               	movlw	1
  2526   001490  1A36               	xorwf	___awdiv@sign^0,f,c
  2527   001492                     l1492:
  2528   001492  0E00               	movlw	0
  2529   001494  6E38               	movwf	(___awdiv@quotient+1)^0,c
  2530   001496  0E00               	movlw	0
  2531   001498  6E37               	movwf	___awdiv@quotient^0,c
  2532   00149A  5033               	movf	___awdiv@divisor^0,w,c
  2533   00149C  1034               	iorwf	(___awdiv@divisor+1)^0,w,c
  2534   00149E  B4D8               	btfsc	status,2,c
  2535   0014A0  EF54  F00A         	goto	u861
  2536   0014A4  EF56  F00A         	goto	u860
  2537   0014A8                     u861:
  2538   0014A8  EF7E  F00A         	goto	l1514
  2539   0014AC                     u860:
  2540   0014AC  0E01               	movlw	1
  2541   0014AE  6E35               	movwf	___awdiv@counter^0,c
  2542   0014B0  EF5E  F00A         	goto	l1500
  2543   0014B4                     l1498:
  2544   0014B4  90D8               	bcf	status,0,c
  2545   0014B6  3633               	rlcf	___awdiv@divisor^0,f,c
  2546   0014B8  3634               	rlcf	(___awdiv@divisor+1)^0,f,c
  2547   0014BA  2A35               	incf	___awdiv@counter^0,f,c
  2548   0014BC                     l1500:
  2549   0014BC  AE34               	btfss	(___awdiv@divisor+1)^0,7,c
  2550   0014BE  EF63  F00A         	goto	u871
  2551   0014C2  EF65  F00A         	goto	u870
  2552   0014C6                     u871:
  2553   0014C6  EF5A  F00A         	goto	l1498
  2554   0014CA                     u870:
  2555   0014CA                     l1502:
  2556   0014CA  90D8               	bcf	status,0,c
  2557   0014CC  3637               	rlcf	___awdiv@quotient^0,f,c
  2558   0014CE  3638               	rlcf	(___awdiv@quotient+1)^0,f,c
  2559   0014D0  5033               	movf	___awdiv@divisor^0,w,c
  2560   0014D2  5C31               	subwf	___awdiv@dividend^0,w,c
  2561   0014D4  5034               	movf	(___awdiv@divisor+1)^0,w,c
  2562   0014D6  5832               	subwfb	(___awdiv@dividend+1)^0,w,c
  2563   0014D8  A0D8               	btfss	status,0,c
  2564   0014DA  EF71  F00A         	goto	u881
  2565   0014DE  EF73  F00A         	goto	u880
  2566   0014E2                     u881:
  2567   0014E2  EF78  F00A         	goto	l1510
  2568   0014E6                     u880:
  2569   0014E6  5033               	movf	___awdiv@divisor^0,w,c
  2570   0014E8  5E31               	subwf	___awdiv@dividend^0,f,c
  2571   0014EA  5034               	movf	(___awdiv@divisor+1)^0,w,c
  2572   0014EC  5A32               	subwfb	(___awdiv@dividend+1)^0,f,c
  2573   0014EE  8037               	bsf	___awdiv@quotient^0,0,c
  2574   0014F0                     l1510:
  2575   0014F0  90D8               	bcf	status,0,c
  2576   0014F2  3234               	rrcf	(___awdiv@divisor+1)^0,f,c
  2577   0014F4  3233               	rrcf	___awdiv@divisor^0,f,c
  2578   0014F6  2E35               	decfsz	___awdiv@counter^0,f,c
  2579   0014F8  EF65  F00A         	goto	l1502
  2580   0014FC                     l1514:
  2581   0014FC  5036               	movf	___awdiv@sign^0,w,c
  2582   0014FE  B4D8               	btfsc	status,2,c
  2583   001500  EF84  F00A         	goto	u891
  2584   001504  EF86  F00A         	goto	u890
  2585   001508                     u891:
  2586   001508  EF8A  F00A         	goto	l1518
  2587   00150C                     u890:
  2588   00150C  6C37               	negf	___awdiv@quotient^0,c
  2589   00150E  1E38               	comf	(___awdiv@quotient+1)^0,f,c
  2590   001510  B0D8               	btfsc	status,0,c
  2591   001512  2A38               	incf	(___awdiv@quotient+1)^0,f,c
  2592   001514                     l1518:
  2593   001514  C037  F031         	movff	___awdiv@quotient,?___awdiv
  2594   001518  C038  F032         	movff	___awdiv@quotient+1,?___awdiv+1
  2595   00151C  0012               	return		;funcret
  2596   00151E                     __end_of___awdiv:
  2597                           	callstack 0
  2598                           
  2599                           	psect	smallconst
  2600   001000                     __psmallconst:
  2601                           	callstack 0
  2602   001000  00                 	db	0
  2603   001001  00                 	db	0	; dummy byte at the end
  2604   001000                     __smallconst    set	__psmallconst
  2605   001000                     __mediumconst   set	__psmallconst
  2606   000002                     __activetblptr  equ	2
  2607                           
  2608                           	psect	rparam
  2609   000001                     ___rparam_used  equ	1
  2610   000000                     ___param_bank   equ	0
  2611   000000                     __Lparam        equ	__Lrparam
  2612   000000                     __Hparam        equ	__Hrparam
  2613                           
  2614                           	psect	config
  2615                           
  2616                           ; Padding undefined space
  2617   300000                     	org	3145728
  2618   300000  FF                 	db	255
  2619                           
  2620                           ;Config register CONFIG1H @ 0x300001
  2621                           ;	Oscillator Selection bits
  2622                           ;	OSC = HS, HS oscillator
  2623                           ;	Fail-Safe Clock Monitor Enable bit
  2624                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2625                           ;	Internal/External Oscillator Switchover bit
  2626                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2627   300001                     	org	3145729
  2628   300001  02                 	db	2
  2629                           
  2630                           ;Config register CONFIG2L @ 0x300002
  2631                           ;	Power-up Timer Enable bit
  2632                           ;	PWRT = OFF, PWRT disabled
  2633                           ;	Brown-out Reset Enable bits
  2634                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2635                           ;	Brown Out Reset Voltage bits
  2636                           ;	BORV = 1, 
  2637   300002                     	org	3145730
  2638   300002  09                 	db	9
  2639                           
  2640                           ;Config register CONFIG2H @ 0x300003
  2641                           ;	Watchdog Timer Enable bit
  2642                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2643                           ;	Watchdog Timer Postscale Select bits
  2644                           ;	WDTPS = 32768, 1:32768
  2645   300003                     	org	3145731
  2646   300003  1E                 	db	30
  2647                           
  2648                           ; Padding undefined space
  2649   300004                     	org	3145732
  2650   300004  FF                 	db	255
  2651                           
  2652                           ;Config register CONFIG3H @ 0x300005
  2653                           ;	CCP2 MUX bit
  2654                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2655                           ;	PORTB A/D Enable bit
  2656                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2657                           ;	Low-Power Timer1 Oscillator Enable bit
  2658                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2659                           ;	MCLR Pin Enable bit
  2660                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2661   300005                     	org	3145733
  2662   300005  81                 	db	129
  2663                           
  2664                           ;Config register CONFIG4L @ 0x300006
  2665                           ;	Stack Full/Underflow Reset Enable bit
  2666                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2667                           ;	Single-Supply ICSP Enable bit
  2668                           ;	LVP = OFF, Single-Supply ICSP disabled
  2669                           ;	Extended Instruction Set Enable bit
  2670                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2671                           ;	Background Debugger Enable bit
  2672                           ;	DEBUG = 0x1, unprogrammed default
  2673   300006                     	org	3145734
  2674   300006  81                 	db	129
  2675                           
  2676                           ; Padding undefined space
  2677   300007                     	org	3145735
  2678   300007  FF                 	db	255
  2679                           
  2680                           ;Config register CONFIG5L @ 0x300008
  2681                           ;	Code Protection bit
  2682                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2683                           ;	Code Protection bit
  2684                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2685                           ;	Code Protection bit
  2686                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2687                           ;	Code Protection bit
  2688                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2689   300008                     	org	3145736
  2690   300008  0F                 	db	15
  2691                           
  2692                           ;Config register CONFIG5H @ 0x300009
  2693                           ;	Boot Block Code Protection bit
  2694                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2695                           ;	Data EEPROM Code Protection bit
  2696                           ;	CPD = OFF, Data EEPROM not code-protected
  2697   300009                     	org	3145737
  2698   300009  C0                 	db	192
  2699                           
  2700                           ;Config register CONFIG6L @ 0x30000A
  2701                           ;	Write Protection bit
  2702                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2703                           ;	Write Protection bit
  2704                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2705                           ;	Write Protection bit
  2706                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2707                           ;	Write Protection bit
  2708                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2709   30000A                     	org	3145738
  2710   30000A  0F                 	db	15
  2711                           
  2712                           ;Config register CONFIG6H @ 0x30000B
  2713                           ;	Configuration Register Write Protection bit
  2714                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2715                           ;	Boot Block Write Protection bit
  2716                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2717                           ;	Data EEPROM Write Protection bit
  2718                           ;	WRTD = OFF, Data EEPROM not write-protected
  2719   30000B                     	org	3145739
  2720   30000B  E0                 	db	224
  2721                           
  2722                           ;Config register CONFIG7L @ 0x30000C
  2723                           ;	Table Read Protection bit
  2724                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2725                           ;	Table Read Protection bit
  2726                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2727                           ;	Table Read Protection bit
  2728                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2729                           ;	Table Read Protection bit
  2730                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2731   30000C                     	org	3145740
  2732   30000C  0F                 	db	15
  2733                           
  2734                           ;Config register CONFIG7H @ 0x30000D
  2735                           ;	Boot Block Table Read Protection bit
  2736                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2737   30000D                     	org	3145741
  2738   30000D  40                 	db	64
  2739                           tosu	equ	0xFFF
  2740                           tosh	equ	0xFFE
  2741                           tosl	equ	0xFFD
  2742                           stkptr	equ	0xFFC
  2743                           pclatu	equ	0xFFB
  2744                           pclath	equ	0xFFA
  2745                           pcl	equ	0xFF9
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           indf0	equ	0xFEF
  2753                           postinc0	equ	0xFEE
  2754                           postdec0	equ	0xFED
  2755                           preinc0	equ	0xFEC
  2756                           plusw0	equ	0xFEB
  2757                           fsr0h	equ	0xFEA
  2758                           fsr0l	equ	0xFE9
  2759                           wreg	equ	0xFE8
  2760                           indf1	equ	0xFE7
  2761                           postinc1	equ	0xFE6
  2762                           postdec1	equ	0xFE5
  2763                           preinc1	equ	0xFE4
  2764                           plusw1	equ	0xFE3
  2765                           fsr1h	equ	0xFE2
  2766                           fsr1l	equ	0xFE1
  2767                           bsr	equ	0xFE0
  2768                           indf2	equ	0xFDF
  2769                           postinc2	equ	0xFDE
  2770                           postdec2	equ	0xFDD
  2771                           preinc2	equ	0xFDC
  2772                           plusw2	equ	0xFDB
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      67
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gbio_pin_direction_init@pin_config	PTR const struct . size(1) Largest target is 5
		 -> led_init@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), ssegment$pins(COMRAM[4]), 

    gbio_pin_init@pin_config	PTR const struct . size(1) Largest target is 5
		 -> led_init@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), ssegment$pins(COMRAM[4]), 

    gbio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 5
		 -> led_init@pin_obj(COMRAM[1]), led_off@pin_obj(COMRAM[1]), led_on@pin_obj(COMRAM[1]), ssegment(COMRAM[5]), 
		 -> ssegment$pins(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    seven_segment_init@ssegment	PTR const struct . size(1) Largest target is 5
		 -> ssegment(COMRAM[5]), 

    seven_segment_write_number@ssegment	PTR const struct . size(1) Largest target is 5
		 -> ssegment(COMRAM[5]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 


Critical Paths under _main in COMRAM

    _main->_seven_segment_write_number
    _seven_segment_write_number->___awdiv
    _init->_seven_segment_init
    _seven_segment_init->_gbio_pin_init
    _gbio_pin_init->_gbio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2246
                                             12 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
              _gbio_port_write_logic
                               _init
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     2      2     542
                                              8 COMRAM     4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     911
           _gbio_port_direction_init
                 _seven_segment_init
 ---------------------------------------------------------------------------------
 (2) _seven_segment_init                                   2     1      1     784
                                             10 COMRAM     2     1      1
                      _gbio_pin_init
 ---------------------------------------------------------------------------------
 (3) _gbio_pin_init                                        3     2      1     645
                                              7 COMRAM     3     2      1
            _gbio_pin_direction_init
               _gbio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gbio_pin_write_logic                                 8     6      2     237
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _gbio_pin_direction_init                              7     6      1     224
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (2) _gbio_port_direction_init                             5     4      1     127
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _gbio_port_write_logic                                5     4      1     139
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _gbio_port_write_logic
   _init
     _gbio_port_direction_init
     _seven_segment_init
       _gbio_pin_init
         _gbio_pin_direction_init
         _gbio_pin_write_logic
   _seven_segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gbio_pin_write_logic (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     14      67     52.8%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRl           4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      71      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 18:11:11 2025

                                l11 1718                                  l16 15EC  
                                l19 165E                                  l99 16D2  
                      ___awdiv@sign 0036                                 l112 1312  
                               l106 1344                                 l107 1342  
                               l131 143E                                 l220 180A  
                               l125 145A                                 l126 1458  
                               l161 1790                                 l149 1754  
                               l454 151C                                 l467 15CA  
                               u700 1246                                 u701 1242  
                               u710 1266                                 u711 1262  
                               u640 1356                                 u800 15DC  
                               u641 1352                                 u801 15D8  
                               u650 1372                                 u810 15EC  
                               u651 136E                                 u811 15E8  
                               u900 152E                                 u740 132C  
                               u724 1286                                 u660 1392  
                               u820 160C                                 u901 152A  
                               u741 1326                                 u725 1282  
                               u661 138E                                 u821 1608  
                               u910 1548                                 u830 1768  
                               u734 12DC                                 u750 1670  
                               u911 1544                                 u831 1764  
                               u735 12D8                                 u751 166C  
                               u840 146C                                 u920 1562  
                               u760 168C                                 u841 1468  
                               u921 155E                                 u761 1688  
                               u850 1486                                 u930 1580  
                               u746 132E                                 u690 122A  
                               u674 13B2                                 u770 16A8  
                               u851 1482                                 u931 157C  
                               u691 1226                                 u675 13AE  
                               u771 16A4                                 u860 14AC  
                               u940 1596                                 u684 1408  
                               u780 16E4                                 u861 14A8  
                               u941 1592                                 u685 1404  
                               u781 16E0                                 u870 14CA  
                               u950 15BA                                 u790 172C  
                               u871 14C6                                 u951 15B6  
                               u791 1728                                 u880 14E6  
                               u881 14E2                                 u890 150C  
                               u891 1508                                 _ret 0043  
                      ___awmod@sign 0036                                 wreg 0FE8  
       ?_seven_segment_write_number 0039                         led_on@F3017 0041  
                              l1410 16D4                                l1500 14BC  
                              l1420 171C                                l1404 16AE  
                              l1412 16E4                                l1510 14F0  
                              l1502 14CA                                l1430 1732  
                              l1422 171C                                l1350 1392  
                              l1342 1346                                l1406 16D0  
                              l1414 16EA                                l1512 14F6  
                              l1504 14D0                                l1432 1752  
                              l1424 172C                                l1360 1442  
                              l1344 1346                                l1416 1716  
                              l1440 15DC                                l1506 14E6  
                              l1514 14FC                                l1530 153A  
                              l1522 151E                                l1434 1752  
                              l1370 122A                                l1362 1458  
                              l1346 1356                                l1450 1630  
                              l1442 15F2                                l1516 150C  
                              l1508 14EE                                l1540 1572  
                              l1532 1548                                l1524 1520  
                              l1460 1758                                l1380 126C  
                              l1372 1246                                l1356 1398  
                              l1348 1372                                l1452 1646  
                              l1444 160C                                l1620 105C  
                              l1518 1514                                l1542 1580  
                              l1550 15AA                                l1534 1550  
                              l1526 152E                                l1470 178E  
                              l1462 1768                                l1382 12C2  
                              l1374 1266                                l1366 121A  
                              l1358 13EE                                l1390 1660  
                              l1446 160E                                l1454 165C  
                              l1438 15CC                                l1630 10D0  
                              l1622 107C                                l1614 1008  
                              l1606 1002                                l1480 145E  
                              l1552 15BA                                l1544 1596  
                              l1536 1562                                l1528 1536  
                              l1472 178E                                l1384 1316  
                              l1368 121A                                l1392 1660  
                              l1448 161E                                l1640 1170  
                              l1632 1118                                l1624 1098  
                              l1616 1040                                l1608 1006  
                              l1490 148E                                l1482 146C  
                              l1554 15C2                                l1546 159E  
                              l1538 156A                                l1458 1758  
                              l1386 1342                                l1394 1670  
                              l1650 11C6                                l1642 117C  
                              l1634 1128                                l1626 10A4  
                              l1618 1050                                l1492 1492  
                              l1484 1474                                l1548 15A4  
                              l1468 176E                                l1396 168C  
                              l1476 17F4                                l1660 11EC  
                              l1652 11D6                                l1644 119C  
                              l1636 1134                                l1628 10C4  
                              l1494 149A                                l1486 1478  
                              l1478 145C                                l1398 16A8  
                              l1662 11FC                                l1654 11D8  
                              l1646 11A8                                l1638 1154  
                              l1496 14AC                                l1488 1486  
                              l1664 11FE                                l1656 11E8  
                              l1648 11C4                                l1498 14B4  
                              l1666 1200                                l1658 11EA  
                              l1668 1210                                u1020 11D6  
                              u1021 11D2                                u1030 11E8  
                              u1031 11E4                                u1040 11FC  
                              u1041 11F8                                u1050 1210  
                              u1051 120C                                u1107 1166  
                              u1117 11AE                                u1067 1046  
                              u1077 108E                                _LATA 0F89  
                              _LATB 0F8A                                u1087 10D6  
                              _LATC 0F8B                                _LATD 0F8C  
                              u1097 111E                                _LATE 0F8D  
                              _main 1002                                _init 17F4  
                              fsr2h 0FDA                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
        seven_segment_init@ssegment 003B                                prodl 0FF3  
                              start FFFC                        ___param_bank 0000  
        ??_gbio_port_direction_init 0032                               ?_main 0031  
                             ?_init 0031                     __end_of___awdiv 151E  
                   __end_of___awmod 15CC                        led_off@F3022 0040  
                   ___awdiv@divisor 0033                     ___awdiv@counter 0035  
                             _PORTA 0F80                               _PORTB 0F81  
                             _PORTC 0F82                               _PORTD 0F83  
                             _PORTE 0F84                               _TRISA 0F92  
                             _TRISB 0F93                               _TRISC 0F94  
                             _TRISD 0F95                               _TRISE 0F96  
    gbio_pin_write_logic@pin_config 0031                               _hours 002B  
                             tablat 0FF5   gbio_port_direction_init@direction 0031  
                             status 0FD8             ??_gbio_port_write_logic 0032  
                   __initialization 1792                        __end_of_main 121A  
                      __end_of_init 180C                       _lat_registers 0001  
                            ??_main 003D                              ??_init 003D  
                     __activetblptr 0002                    ___awdiv@dividend 0031  
           _gbio_pin_direction_init 121A                           ??___awdiv 0035  
                         ??___awmod 0035                    ___awdiv@quotient 0037  
                   ___awmod@divisor 0033                              isa$std 0001  
                   ___awmod@counter 0035                       led_init@F3012 0042  
                      __pdataCOMRAM 0001               seven_segment_init@ret 003C  
                      __mediumconst 1000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
      __end_of_gbio_pin_write_logic 145C             gbio_pin_init@pin_config 0038  
                        __accesstop 0080             __end_of__initialization 17BA  
                _seven_segment_init 16D4                       ___rparam_used 0001  
             __end_of_gbio_pin_init 16D4                      __pcstackCOMRAM 0031  
               ?_seven_segment_init 003B    __end_of_gbio_port_direction_init 1756  
              ??_seven_segment_init 003C           ??_gbio_pin_direction_init 0032  
                        __pnvCOMRAM 0043  seven_segment_write_number@ssegment 0039  
                   led_toggle@F3027 003F                      _tris_registers 000B  
     __end_of_gbio_port_write_logic 1792                             __Hparam 0000  
                           __Lparam 0000                             ___awdiv 145C  
                           ___awmod 151E                _gbio_pin_write_logic 1346  
                      __psmallconst 1000          gbio_port_write_logic@logic 0031  
         gbio_port_write_logic@port 0034                             __pcinit 1792  
                           __ramtop 1000     __end_of_gbio_pin_direction_init 1346  
                           __ptext0 1002                             __ptext1 15CC  
                           __ptext2 17F4                             __ptext3 16D4  
                           __ptext4 1660                             __ptext5 1346  
                           __ptext6 121A                             __ptext7 171A  
                           __ptext8 1756                             __ptext9 151E  
                  ___awmod@dividend 0031                             _minutes 002A  
                           _seconds 0029           ?_gbio_port_direction_init 0031  
              end_of_initialization 17BA                       __Lmediumconst 0000  
             ?_gbio_pin_write_logic 0031                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc2 0FDE   gbio_pin_direction_init@pin_config 0031  
                        main@l_time 003E                       __pidataCOMRAM 17C4  
               start_initialization 1792        ??_seven_segment_write_number 003B  
            ??_gbio_pin_write_logic 0033                         __pbssCOMRAM 003F  
                         _bcd_codes 001F                            ?___awdiv 0031  
                          ?___awmod 0031        gbio_port_direction_init@port 0034  
                       __smallconst 1000            ?_gbio_pin_direction_init 0031  
                     _gbio_pin_init 1660               _gbio_port_write_logic 1756  
__end_of_seven_segment_write_number 1660          _seven_segment_write_number 15CC  
                         copy_data0 17A6                            __Hrparam 0000  
                    ?_gbio_pin_init 0038                            __Lrparam 0000  
     seven_segment_write_number@ret 003C            _gbio_port_direction_init 171A  
                          __ptext10 145C              ?_gbio_port_write_logic 0031  
                          isa$xinst 0000                            _ssegment 002C  
  seven_segment_write_number@number 003A           gbio_pin_write_logic@logic 0032  
                  gbio_pin_init@ret 003A                     ??_gbio_pin_init 0039  
                    _port_registers 0015          __end_of_seven_segment_init 171A  
